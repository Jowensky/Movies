{"version":3,"sources":["utils/api.js","components/movieInfo/index.js","components/container/index.js","components/header/index.js","components/navbar/index.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["api","background","axios","get","poster","find","params","query","year","movieTitle","youtube","options","part","key","maxResults","q","order","omdb","data","Movieinfo","props","react_default","a","createElement","className","id","width","height","align","src","frameBorder","allow","encrypted-media","allowFullScreen","plot","rated","runtime","genre","director","container","children","header","error","Navbar","Input","Object","assign","type","Label","onClick","search","require","config","Home","state","movie","API","then","res","document","body","style","backgroundImage","concat","results","backdrop_path","catch","err","console","log","_this","setState","Title","Year","handleInputChange","event","_event$target","target","name","value","defineProperty","movieInfo","getElementById","display","Director","Rated","Plot","Runtime","Genre","getVideo","placeVidInHtml","items","videoId","this","onChange","components_container","components_header","Component","App","pages_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a228a8a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  background: function() {\n    return axios.get(\"//api.themoviedb.org/3/trending/movie/week?api_key=d3bd842cd067b7bd659924a258f4ce8d\");\n  },\n  poster: function(find) {\n    return axios.get(\"//api.themoviedb.org/3/search/movie?api_key=d3bd842cd067b7bd659924a258f4ce8d\", {\n      params: {\n        query: find.query,\n        year: find.year\n      }\n    });\n  },\n  movieTitle: function() {\n    return axios.get(\"//api.themoviedb.org/3/search/movie?api_key=d3bd842cd067b7bd659924a258f4ce8d\");\n  },\n  youtube: function(options) {\n    return axios.get(\"//googleapis.com/youtube/v3/search\", {\n      params: {\n        part: options.part,\n        key: options.key,\n        maxResults: options.maxResults,\n        q: options.q,\n        order: options.order\n      }\n    });\n  },\n  omdb: function(data) {\n    return axios.get(\"//omdbapi.com/?apikey=a9f6407&t=\" + data);\n  }\n};","import React from \"react\";\n\nconst Movieinfo = props => {\n  return (\n    <div className=\"row\">\n      <div className=\"col s12 center\">\n      {/* eslint-disable-next-line */}\n      <iframe id=\"youtube\" width='700' height='450' align='middle' src={props.youtube} frameBorder='0' allow='autoplay' encrypted-media=\"true\" allowFullScreen></iframe>\n        <div id=\"info\">\n          <div>{props.plot}</div>\n          <div>{props.rated}{props.runtime}{props.genre}</div>\n          <div>{props.director}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Movieinfo;\n","import React from \"react\";\n\nconst container = (props) => {\n  return <div className=\"container\">{props.children}</div>;\n};\n\nexport default container;","import React from \"react\";\n\nconst header = props => {\n  return (\n    <div className=\"row\">\n      <div className=\"col s12 center\">\n        <div id=\"lookitup\">Movie Trailers</div>\n        <div id=\"error\">{props.error}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default header;","import React from \"react\";\n\nexport function Navbar(props) {\n  return (\n    <div className=\"nav-bar fixed\">\n    <nav>\n      <div className=\"nav-wrapper black\">\n        <form>\n          <div className=\"input-field\">\n          {props.children}\n          </div>\n        </form>\n      </div>\n    </nav>\n  </div>\n  );\n};\n\nexport function Input(props) {\n  return (\n  <input id=\"artist\" type=\"search\" {...props} />\n  )\n}\n\nexport function Label(props) {\n  return (\n  <label className=\"label-icon\" id=\"right\"><i className=\"material-icons\" id=\"submit\" onClick={() => props.search()}>search</i></label>\n  )\n}\n\n\n","import React, { Component } from \"react\";\nimport API from \"../utils/api\";\nimport Movieinfo from \"../components/movieInfo\"\nimport Container from \"../components/container\";\nimport Header from \"../components/header\";\nimport {Label, Input, Navbar} from \"../components/navbar\";\nrequire(\"dotenv\").config();\n\nclass Home extends Component {\n  state = {\n    movie: \"\",\n    director: \"\",\n    rated: \"\",\n    plot: \"\",\n    runtime: \"\",\n    genre: \"\",\n    youtube: \"\"\n  };\n\n  componentDidMount() {\n    this.background();\n  }\n\n  background = () => {\n    API.background()\n      .then(res => document.body.style.backgroundImage = `url(https://image.tmdb.org/t/p/original${res.data.results[0].backdrop_path})`)\n      .catch(err => console.log(err));\n  };\n\n  poster = (search) => {\n    this.setState({ movie: \"\"})\n    const find = {\n      query: search.data.Title,\n      year: search.data.Year,\n    }\n\n    API.poster(find)\n      .then(res => document.body.style.backgroundImage = `url(https://image.tmdb.org/t/p/original${res.data.results[0].backdrop_path})`)\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  movieInfo = () => {\n    document.getElementById('info').style.display = 'block'\n\n    API.omdb(this.state.movie)\n    .then((res) => {\n      this.setState({\n        director: res.data.Director,\n        rated: res.data.Rated,\n        plot: res.data.Plot,\n        runtime: res.data.Runtime,\n        genre: res.data.Genre\n      })\n      console.log(this.state.runtime)\n      this.getVideo(res)\n     })\n    .catch(err => console.log(err))\n  };\n\n  getVideo = res => {\n    const search = `${this.state.director} ${res.data.Title} movie trailer ${res.data.Year}`\n    this.poster(res)\n    const options = {\n      part: \"snippet\",\n      maxResults: 1,\n      key: \"AIzaSyC7PXhSNVVsm-fxia2x6uiluvBZe0p9Y2M\",\n      q: search,\n      order: \"viewCount\"\n    };\n\n    API.youtube(options)\n    .then(res => this.placeVidInHtml(res.data.items[0].id.videoId))\n    .catch((err) => {\n      this.setState({ youtube: \"\" })\n      console.log(err)\n    })\n  }\n\n  placeVidInHtml = id => {\n    this.setState({ youtube: `https://www.youtube.com/embed/${id}` })\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar>\n        <Input\n          value={this.state.movie}\n          onChange={this.handleInputChange}\n          name=\"movie\"\n          />\n        <Label \n          search={this.movieInfo}\n        />\n        </Navbar>\n        <Container>\n          <Header />\n          <Movieinfo \n            youtube={this.state.youtube}\n            rated={this.state.rated === \"UNRATED\"  || this.state.rated === \"N/A\" || !this.state.rated ? '' : `${this.state.rated} | `}\n            plot={this.state.plot}\n            runtime={this.state.runtime === \"UNRATED\"  || this.state.runtime === \"N/A\" || !this.state.runtime ? '' : `${this.state.runtime} | `}\n            genre={this.state.genre === \"UNRATED\"  || this.state.genre === \"N/A\" || !this.state.genre ? '' : this.state.genre}\n            director={this.state.director === \"N/A\" ? '' : this.state.director}\n          />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport Home from './pages/Home'\nimport style from './style/style.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Home style={style} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}