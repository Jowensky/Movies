{"version":3,"sources":["components/Selected-Film/images/blankhead.png","components/Listings/images/noPoster.jpg","components/Now-Playing/index.js","components/Nav/index.js","actions/types.js","actions/On-Display/index.js","actions/Listings/index.js","actions/Search/movie.js","actions/Search/show.js","actions/Now-Playing/movies.js","actions/Now-Playing/shows.js","pages/Home.js","components/Display/index.js","components/Simple-Slider/index.js","components/Selected-Film/index.js","actions/Cast-Members/index.js","actions/Related/index.js","actions/Trailer/index.js","pages/Display.js","components/Listings/index.js","pages/Favorites.js","pages/Search.js","reducers/Cast-Members/index.js","reducers/Listings/index.js","reducers/On-Display/index.js","reducers/Related/index.js","reducers/Search/movie.js","reducers/Search/show.js","reducers/Trailer/index.js","reducers/Now-Playing/movies.js","reducers/Now-Playing/shows.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NowPlaying","props","react_default","a","createElement","className","children","NowPlayingParallax","style","backgroundImage","concat","poster","id","title","overview","onClick","chosen","NavLink","to","NavBar","list","autoComplete","onSubmit","event","search","Input","Object","assign","type","placeholder","OnDisplay","dispatch","payload","Listings","data","axios","get","url","then","res","lists","results","slice","media","PageTitle","forEach","obj","stream","original_name","original_title","poster_path","backdrop","backdrop_path","vote","vote_average","push","SearchFilm","retrival","film","SearchShow","show","MoviesPlaying","films","FilmsNowPlaying","ShowsPlaying","shows","ShowsOnAir","Home","state","reviews","tosearch","handleInputChange","_event$target","target","name","value","_this","setState","defineProperty","preventDefault","movieChosen","choosenFilm","movies","find","_ref","showChosen","choosenShow","_ref2","shorten","substr","this","_this2","Redirect","onChange","length","map","Component","connect","ShowsPlayingReducer","MoviesPlayingReducer","RelatedFilms","display","src","alt","RelatedContainer","FilmSlider","lib_default","arrows","infinite","speed","slidesToShow","slidesToScroll","React","Selected","rating","genre","director","Casts","photo","blankHead","character","MovieTrailer","video","frameBorder","allow","allowFullScreen","CastMembersAction","cast","castMembers","castMember","profile_path","RelatedAction","group","similar","TrailerAction","uTubeTrailer","key","Movie","youtube","Listing","related","selected","trailer","Simple_Slider","casts","relative","TrailerReducer","RelatedReducer","CastMembersReducer","Media","fullDisplay","noPoster","Favorites","displayFav","medium","page","shift","values","toString","components_Listings_Listings","displayMovie","displayShow","MovieSearch","ShowSearch","initialState","arguments","undefined","action","objectSpread","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","BrowserRouter","Switch","Route","exact","path","component","Display","Search","default","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8796ad36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blankhead.b6681619.png\";","module.exports = __webpack_public_path__ + \"static/media/noPoster.3a53c6da.jpg\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport './style.css'\n\nexport function NowPlaying(props) {\n  return <div className=\"home-container\">{props.children}</div>\n}\n\nexport function NowPlayingParallax(props) {\n  return (\n    <section style={{backgroundImage: `url(https://image.tmdb.org/t/p/original${props.poster})`}}>\n      <div id=\"description\">\n        <h2 className={props.title === \"フェアリーテイル\" ? \"tooLarge\" : null}>{props.title}</h2>\n        <p className=\"overview\">{props.overview}</p>\n        <p className=\"trailer\" onClick={() => props.chosen(props.title)}>\n          <NavLink  to=\"/display\"><i className=\"fab fa-youtube\"></i></NavLink>\n        </p>\n      </div>\n    </section>\n  )\n}","import React from \"react\";\nimport './style.css'\nimport { NavLink } from \"react-router-dom\";\n\nexport function NavBar(props) {\n  return (\n    <div id=\"navbar\">\n      <ul>\n        <li><NavLink to=\"/\"><span id=\"home\">Home</span></NavLink></li>\n        <li>Hot\n          <ul>\n            <li onClick={() => props.list('popShows')}> \n              <NavLink  to=\"/favorites/popular-shows\">Shows</NavLink>\n            </li>\n            <li onClick={() => props.list('popFilm')}>\n              <NavLink  to=\"/favorites/popular-film\">Film</NavLink>\n            </li>\n          </ul>\n        </li>\n        <li>Top 20\n          <ul>\n            <li onClick={() => props.list('topRatedShows')}>\n              <NavLink  to=\"/favorites/top-rated-films-20\">Shows</NavLink>\n            </li>\n            <li onClick={() => props.list('topRatedFilms')}>      \n              <NavLink  to=\"/favorites/top-rated-shows-20\">Film</NavLink>\n            </li>\n          </ul>\n        </li>\n      </ul>\n      <div className=\"searchInput\">\n        <form autoComplete=\"off\" onSubmit={(event) => props.search(event)}>\n        {props.children}\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport function Input(props) {\n  return <input id=\"input\" type=\"text\" placeholder=\"Search\" {...props}/>\n}","export const selected = 'selected';\nexport const trailer = 'trailer';\nexport const related = 'related';\nexport const cast = \"cast\";\nexport const listing = \"listings\";\nexport const movieSearch = \"movieSearch\";\nexport const showSearch = \"showSearch\";\nexport const showsNowPlaying = \"showsNowPlaying\";\nexport const moviesNowPlaying = \"moviesNowPlaying\"\nexport const bannerFilms = \"bannerFilms\"","import { selected } from \"../types\";\n\nconst OnDisplay = chosen => dispatch => {\n    dispatch({\n      type: selected,\n      payload: chosen\n    })\n}\n\nexport default OnDisplay;","import { listing } from \"../types\";\nimport axios from \"axios\";\n\nconst Listings = data => {\n    return function(dispatch) {\n      axios.get(data.url)\n      .then(res => {\n        let lists = (res.data.results.slice(0, 12))\n        let media = [{PageTitle: data.title}]\n        lists.forEach(list => {\n          let obj = {\n            type: data.stream,\n            title: data.stream === \"show\" ? list.original_name : list.original_title,\n            poster: list.poster_path,\n            backdrop: list.backdrop_path,\n            overview: list.overview,\n            vote: list.vote_average,\n            id: list.id\n          }\n          media.push(obj)\n        })\n        dispatch({\n          type: listing,\n          payload: media\n        })\n      })\n    }\n}\n\nexport default Listings;","import { movieSearch } from \"../types\";\nimport axios from \"axios\";\n\nconst SearchFilm = data => {\n    return function(dispatch) {\n      axios.get(`https://api.themoviedb.org/3/search/movie?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&query=${data}&page=1&include_adult=false`)\n      .then(res => {\n        let retrival = res.data.results.slice(0, 10)\n        let search = []\n        retrival.forEach(film => {\n          let obj = {\n            backdrop: film.backdrop_path,\n            poster: film.poster_path,\n            title: film.title,\n            overview: film.overview,\n            vote: film.vote_average,\n            id: film.id\n          }\n          search.push(obj)\n        })\n        dispatch({\n          type: movieSearch,\n          payload: search\n        })\n      })\n    }\n}\n\nexport default SearchFilm;","import { showSearch } from \"../types\";\nimport axios from \"axios\";\n\nconst SearchShow = data => {\n    return function(dispatch) {\n      axios.get(`https://api.themoviedb.org/3/search/tv?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&query=${data}&page=1&include_adult=false`)\n      .then(res => {\n        let retrival = res.data.results.slice(0, 10)\n        let search = []\n        retrival.forEach(show => {\n          let obj = {\n            backdrop: show.backdrop_path,\n            poster: show.poster_path,\n            title: show.original_name,\n            overview: show.overview,\n            vote: show.vote_average,\n            id: show.id\n          }\n          search.push(obj)\n        })\n        dispatch({\n          type: showSearch,\n          payload: search\n        })\n      })\n    }\n}\n\nexport default SearchShow;","import { moviesNowPlaying } from \"../types\";\nimport axios from \"axios\";  \n\nconst MoviesPlaying = () => {\n    return function(dispatch) {\n        axios.get('//api.themoviedb.org/3/movie/now_playing?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1&genre_ids=28')\n        .then((res) => {\n            let films = (res.data.results.slice(0, 3))\n            let FilmsNowPlaying = []\n            films.forEach((film) => {\n            let obj = {\n                type: 'film',\n                backdrop: film.backdrop_path,\n                poster: film.poster_path,\n                title: film.title,\n                overview: film.overview,\n                vote: film.vote_average,\n                id: film.id\n            }\n                FilmsNowPlaying.push(obj)\n            })\n            dispatch({\n                type: moviesNowPlaying,\n                payload: FilmsNowPlaying\n            })\n        })\n    }\n}\n\nexport default MoviesPlaying;","import { showsNowPlaying } from \"../types\";\nimport axios from \"axios\";  \n  \nconst ShowsPlaying = () => {\n    return function(dispatch) {\n        axios.get('//api.themoviedb.org/3/tv/on_the_air?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1')\n        .then(res => {\n            let shows = (res.data.results.slice(3, 5))\n            let ShowsOnAir = []\n            shows.forEach((show) => {\n            let obj = {\n                type: 'show',\n                backdrop: show.backdrop_path,\n                poster: show.poster_path,\n                title: show.original_name,\n                overview: show.overview,\n                vote: show.vote_average,\n                id: show.id\n            }\n            ShowsOnAir.push(obj)\n            })\n            dispatch({\n                type: showsNowPlaying,\n                payload: ShowsOnAir\n            })\n        })\n    }\n} \n\nexport default ShowsPlaying","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { NowPlayingParallax, NowPlaying } from '../components/Now-Playing';\nimport { NavBar, Input } from '../components/Nav'\nimport OnDisplay from '../actions/On-Display';\nimport Listings from '../actions/Listings'\nimport SearchFilm from '../actions/Search/movie'\nimport SearchShow from '../actions/Search/show'\nimport MoviesPlaying from '../actions/Now-Playing/movies';\nimport ShowsPlaying from '../actions/Now-Playing/shows';\n\nclass Home extends Component {\n  state = {\n    reviews: -1,\n    search: \"\",\n    tosearch: false\n  };\n\n\n  /* ---------------- Component Life-Cycle -------------*/\n  componentDidMount() {\n    this.props.MoviesPlaying()\n    this.props.ShowsPlaying();\n  }\n\n\n  /* ------------------ Handle Input Change ------------- */\n  handleInputChange = event => {\n\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  \n  /* ------------ Top Rated & Most Popular ------------ */\n  list = data => {\n    let obj = -1\n    switch(data) {\n      case 'popShows':\n        obj = {\n          title: 'Popular Shows',\n          url: '//api.themoviedb.org/3/tv/popular?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1',\n          stream: 'show'\n        }\n      break;\n      case 'popFilm':\n        obj = {\n          title: 'Popular Film',\n          url: '//api.themoviedb.org/3/movie/popular?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=2',\n          stream: 'movie'\n        }\n      break;\n      case 'topRatedShows': \n        obj = {\n          title: 'Top Rated Shows',\n          url: '//api.themoviedb.org/3/tv/top_rated?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1',\n          stream: 'show'\n        }\n      break;\n      case 'topRatedFilms':\n        obj = {\n          title: 'Top Rated Films',\n          url: '//api.themoviedb.org/3/movie/top_rated?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1',\n          stream: 'movie'\n        }\n      break;\n      default:\n      break;\n    }\n    this.props.Listings(obj)\n  }\n\n\n  /* ----------------- Search -------------------*/\n  search = event => {\n    event.preventDefault();\n    this.props.SearchFilm(this.state.search)\n    this.props.SearchShow(this.state.search)\n    this.setState({tosearch: true})\n  }\n\n \n  /* --------------- Chossen Film --------------------*/\n  movieChosen = event => {\n    const choosenFilm = this.props.movies.find(({ title }) => title === event);\n    this.props.OnDisplay(choosenFilm)\n  }\n\n  showChosen = event => {\n    const choosenShow = this.props.shows.find(({ title }) => title === event);\n\n    this.props.OnDisplay(choosenShow)\n  }\n\n  shorten = overview => {\n    if (overview) {\n      return `${overview.substr(0, 150)}..`;\n    } else {\n      return ``;\n    }\n  };\n \n\n  render() {\n    if (this.state.tosearch === true) {\n      return <Redirect to='/search' />\n    }\n    return (\n      <div>\n        <NavBar\n        list={this.list}\n        search={this.search}\n        >\n        <Input \n        value={this.state.search}\n        onChange={this.handleInputChange}\n        name=\"search\"\n        />\n        </NavBar>\n        {this.props.movies.length ? (\n        <NowPlaying>\n        {this.props.movies.map((film) => (\n          <NowPlayingParallax \n            poster={film.backdrop}\n            title={film.title}\n            chosen={this.movieChosen}\n            overview={this.shorten(film.overview)}\n          />\n        ))}    \n        </NowPlaying>\n        ) : (<div/>)}\n        {this.props.shows.length ? (\n        <NowPlaying>\n        {this.props.shows.map((show) => (\n          <NowPlayingParallax \n            poster={show.backdrop}\n            title={show.title}\n            chosen={this.showChosen}\n            overview={this.shorten(show.overview)}\n          />\n        ))}    \n        </NowPlaying>\n        ) : (<div/>)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  shows: state.ShowsPlayingReducer.shows,\n  movies: state.MoviesPlayingReducer.movies,\n});\n\nexport default connect(mapStateToProps, { OnDisplay, Listings, SearchFilm, SearchShow, MoviesPlaying, ShowsPlaying } )(Home);","import React from \"react\";\nimport './style.css';\n\nexport function RelatedFilms(props) {\n    return (\n        <div onClick={() => props.display(props.title)} className=\"relatedFilm col-md-6\">\n            <img src={`https://image.tmdb.org/t/p/original${props.poster}`} alt={props.poster} />\n        </div>\n    )\n}\n\nexport function RelatedContainer(props) {\n    return (\n        <div id=\"relatedContainer\" className=\"container-fluid\">\n            <div className=\"row justify-content-center related\">\n                <div className=\"col-md-12 text-center\">\n                    <h1>Related Films</h1>\n                </div>\n                    {props.children}\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport Slider from \"react-slick\";\nimport './style.css'\n\nclass FilmSlider extends React.Component {\n  render() {\n    const settings = {\n      arrows: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 4,\n      slidesToScroll: 1,\n      className: \"slider row\"\n    };\n    return (\n      <Slider {...settings}>\n        {this.props.children}\n      </Slider>\n    );\n  }\n}\n\nexport default FilmSlider;","import React from \"react\";\nimport './style.css'\nimport blankHead from './images/blankhead.png';\n\nexport function Selected(props) {\n    return (\n        <div>\n            <img id=\"selectedBackDrop\" src={`https://image.tmdb.org/t/p/original${props.backdrop}`} alt=\"Poster\" />\n            <div className=\"container\">\n                <div className=\"row text-center\" id=\"film\">\n                    <div className=\"selectedPosterDiv col-lg-6 col-md-12 order2\">\n                        <img id=\"selectedPoster\" src={`https://image.tmdb.org/t/p/original${props.poster}`} alt={props.title}/>\n                    </div>\n                    <div className=\"col-lg-6 col-md-12 order1\" id=\"details\">\n                        <div className=\"selectedDesciption displayGroup\">\n                            <h1>{props.title}</h1>\n                        <div className=\"row justify-content-around\">\n                            <p><i className=\"fas fa-star starRating\"></i><span className=\"rating\">{props.rating}</span></p>\n                            <p>{props.genre}</p>\n                            <p id=\"director\">{props.director}</p>\n                        </div>\n                            <p id=\"overview\">{props.overview}</p>\n                        </div>\n                        <div id=\"cast\">\n                            {props.children}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport function Casts(props) {\n    return (\n        <div className=\"castMember\">\n            <img src={props.photo === null ? blankHead : `https://image.tmdb.org/t/p/original${props.photo}`} alt={props.name} />\n            <div className=\"name\">\n                <p id=\"performer\">{props.name}</p>\n                <p id=\"character\">Character: {props.character}</p>\n            </div>\n        </div>\n    );\n}\n\nexport function Options(props) {\n    return (\n        <div className=\"options\">\n            <ul className=\"d-flex justify-content-around\">\n                <li onClick={() => props.info('cast')}>Cast</li>\n                <li onClick={() => props.info('trailer')}>Trailer</li>\n                <li onClick={() => props.info('related')}>Related</li>\n            </ul>\n        </div>\n    )\n}\n\nexport function MovieTrailer(props) {\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-sm-12 text-center center\">\n                    <iframe id=\"trailer\" \n                        src={props.video} title=\"video\" frameBorder=\"0\" \n                        allow=\"autoplay; encrypted-media\" allowFullScreen>\n                    </iframe>\n                </div>\n            </div>\n        </div>\n    )\n}","import { cast } from \"../types\";\nimport axios from \"axios\";\n\nconst CastMembersAction = data => {\n    const url = data.stream === 'show' ?\n    `https://api.themoviedb.org/3/tv/${data.id}/credits?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US` :\n    `//api.themoviedb.org/3/movie/${data.id}/credits?api_key=d3bd842cd067b7bd659924a258f4ce8d`\n    return function(dispatch) {\n    axios\n      .get(url)\n      .then((res) => {\n        let data = (res.data.cast.slice(0, 6))\n        // const director = res.data.crew.find( director => director.job === \"Director\" );\n        let castMembers = []\n        // castMembers.push({director: director.name})\n        data.forEach(castMember => {\n          let obj = {\n            character: castMember.character,\n            name: castMember.name,\n            photo: castMember.profile_path\n          }\n          castMembers.push(obj)\n      })\n        dispatch({\n          type: cast,\n          payload: castMembers\n        })\n      })\n    }\n}\n\nexport default CastMembersAction;","import { related } from \"../types\";\nimport axios from \"axios\";\n\nconst RelatedAction = data => {\n    const url = data.stream === \"show\" ? \n    `//api.themoviedb.org/3/tv/${data.id}/similar?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1` :\n    `//api.themoviedb.org/3/movie/${data.id}/similar?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1`\n    return function(dispatch) {\n    axios\n      .get(url)\n      .then((res) => {\n        let group = res.data.results.slice(0,4)\n        let similar = []\n        group.forEach(media => {\n          let obj = {\n            type: data.stream === \"show\" ? \"show\" : \"movie\",\n            backdrop: media.backdrop_path,\n            poster: media.poster_path,\n            title: data.stream === \"show\" ? media.original_name : media.original_title,\n            overview: media.overview,\n            vote: media.vote_average,\n            id: media.id\n          }\n          similar.push(obj)\n      })\n        dispatch({\n          type: related,\n          payload: similar\n        })\n      })\n    }\n}\n\nexport default RelatedAction;","import { trailer } from \"../types\";\nimport axios from \"axios\";\n\nconst TrailerAction = data => {\n    const url = data.stream === 'show' ?\n     `//api.themoviedb.org/3/tv/${data.id}/videos?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US` :\n     `https://api.themoviedb.org/3/movie/${data.id}/videos?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US`\n    return function(dispatch) {\n      axios.get(url)\n      .then(res => {\n        const uTubeTrailer = res.data.results[0].key\n        dispatch({\n          type: trailer,\n          payload: uTubeTrailer\n        })\n      })\n    }\n}\n\nexport default TrailerAction;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport {RelatedFilms, RelatedContainer} from '../components/Display';\nimport FilmSlider from '../components/Simple-Slider';\nimport { NavBar, Input } from '../components/Nav'\nimport { Selected, MovieTrailer, Casts} from '../components/Selected-Film'\nimport CastMembersAction from '../actions/Cast-Members';\nimport RelatedAction from '../actions/Related';\nimport TrailerAction from '../actions/Trailer';\nimport OnDisplay from '../actions/On-Display';\nimport SearchFilm from '../actions/Search/movie'\nimport SearchShow from '../actions/Search/show'\nimport Listing from '../actions/Listings'\n\nclass Movie extends Component {\n  state = {\n    youtube: -1,\n    search: \"\",\n    id: '',\n    tosearch: false,\n    director: \"\"\n  };\n  \n\n  /* ---------------- Component Life-Cycle -------------*/\n  componentDidMount() {\n    this.setState({id: this.props.selected.id})\n    this.props.CastMembersAction({id: this.props.selected.id, stream: this.props.selected.type})\n    this.props.RelatedAction({id: this.props.selected.id, stream: this.props.selected.type})\n    this.props.TrailerAction({id: this.props.selected.id, stream: this.props.selected.type})\n  }\n\n  componentWillReceiveProps(props) {\n    if (this.state.id !== props.selected.id) {\n      this.props.TrailerAction({id: props.selected.id, stream: props.selected.type})\n      this.props.RelatedAction({id: props.selected.id, stream: props.selected.type})\n      this.props.CastMembersAction({id: props.selected.id, stream: props.selected.type})\n      this.setState({id: props.selected.id})\n    }\n\n    if (props.trailer) {\n    const video = \"https://www.youtube.com/embed/\" + props.trailer\n    this.setState({ youtube: video})\n    }\n  }\n\n\n  /* ------------------ Handle Input Change ------------- */\n  handleInputChange = event => {\n\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n\n  /* ------------ Top Rated & Most Popular ------------ */\n  list = data => {\n    let obj = -1\n    switch(data) {\n      case 'popShows':\n        obj = {\n          title: 'Popular Shows',\n          url: '//api.themoviedb.org/3/tv/popular?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1',\n          stream: 'show'\n        }\n      break;\n      case 'popFilm':\n        obj = {\n          title: 'Popular Film',\n          url: '//api.themoviedb.org/3/movie/popular?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=2',\n          stream: 'movie'\n        }\n      break;\n      case 'topRatedShows': \n        obj = {\n          title: 'Top Rated Shows',\n          url: '//api.themoviedb.org/3/tv/top_rated?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1',\n          stream: 'show'\n        }\n      break;\n      case 'topRatedFilms':\n        obj = {\n          title: 'Top Rated Films',\n          url: '//api.themoviedb.org/3/movie/top_rated?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1',\n          stream: 'movie'\n        }\n      break;\n      default:\n      break;\n    }\n    this.props.Listing(obj)\n  }\n\n  /* ----------------- Search -------------------*/\n  search = event => {\n    event.preventDefault();\n    this.props.SearchFilm(this.state.search)\n    this.props.SearchShow(this.state.search)\n    this.setState({tosearch: true})\n  }\n\n  display = event => {\n    const chosen = this.props.related.find(({ title }) => title === event); \n    \n    this.props.OnDisplay(chosen)\n  }\n\n\n  render() {\n    if (this.state.tosearch === true) {\n      return <Redirect to='/search' />\n    }\n    return (\n      <div>\n        <NavBar\n          list={this.list}\n          search={this.search}\n        >\n        <Input \n          value={this.state.search}\n          onChange={this.handleInputChange}\n          name=\"search\"\n        />\n        </NavBar>\n         {this.props.selected.title ? (\n        <Selected \n          backdrop = {this.props.selected.backdrop}\n          poster = {this.props.selected.poster}\n          title = {this.props.selected.title}\n          overview = {this.props.selected.overview}\n          rating = {this.props.selected.vote}\n         >\n        <FilmSlider>\n          {this.props.casts.map(castMember => (\n          <Casts \n            photo = {castMember.photo}\n            character = {castMember.character}\n            name = {castMember.name}\n          />\n          ))}\n        </FilmSlider>\n        </Selected>\n        ) : (<div/>)}\n        {this.state.youtube === -1 ? false :\n          <MovieTrailer \n            video = {this.state.youtube}\n          />\n        }\n        {this.props.related.length ? (\n        <RelatedContainer>\n          {this.props.related.map(relative => (\n            <div>\n              <NavLink  to=\"/display\"> \n                <RelatedFilms \n                  poster = {relative.poster}\n                  title = {relative.title}\n                  display = {this.display}\n                />\n              </NavLink>\n            </div>\n          ))}\n        </RelatedContainer>\n         ) : (<div/>) }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  selected: state.OnDisplay.selected,\n  trailer: state.TrailerReducer.trailer,\n  related: state.RelatedReducer.related,\n  casts: state.CastMembersReducer.casts,\n});\n\nexport default connect(mapStateToProps, {CastMembersAction, RelatedAction, TrailerAction, OnDisplay, Listing, SearchFilm, SearchShow } )(Movie);","import React from \"react\";\nimport './style.css'\nimport noPoster from './images/noPoster.jpg'\n\nexport function Listings(props) {\n    return (\n        <div className=\"container\">\n        <h1 id=\"group\">{props.title}</h1>\n            <div className=\"row justify-content-center\">\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport function Media(props) {\n    return (\n        <div onClick={() => props.fullDisplay(props.title)} className=\"favs\">\n            <img className=\"mediaPoster\" src={props.poster === null ? noPoster : `https://image.tmdb.org/t/p/original${props.poster}`} alt={props.poster} />\n            <h2 className=\"mediaTitle\">{props.title}</h2>\n        </div>\n    )\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { NavBar, Input } from '../components/Nav'\nimport { Listings, Media } from '../components/Listings'\nimport OnDisplay from '../actions/On-Display';\nimport SearchFilm from '../actions/Search/movie'\nimport SearchShow from '../actions/Search/show'\nimport Listing from '../actions/Listings'\n\nclass Favorites extends Component {\n  state = {\n    title: '',\n    search: \"\",\n    tosearch: false\n  };\n\n  componentWillReceiveProps(props) {\n    const page = props.medium.shift();\n    if (props.medium.length) {\n      this.setState({title: Object.values(page).toString()})\n    }\n  }\n\n\n  /* ------------------ Handle Input Change ------------- */\n  handleInputChange = event => {\n\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n\n  /*-----------------------  Display  ----------------------*/\n  displayFav = event => {\n    const chosen = this.props.medium.find(({ title }) => title === event); \n    \n    this.props.OnDisplay(chosen)\n  }\n\n  /* ------------ Top Rated & Most Popular ------------ */\n  list = data => {\n    let obj = -1\n    switch(data) {\n      case 'popShows':\n        obj = {\n          title: 'Popular Shows',\n          url: '//api.themoviedb.org/3/tv/popular?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1',\n          stream: 'show'\n        }\n      break;\n      case 'popFilm':\n        obj = {\n          title: 'Popular Film',\n          url: '//api.themoviedb.org/3/movie/popular?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=2',\n          stream: 'movie'\n        }\n      break;\n      case 'topRatedShows': \n        obj = {\n          title: 'Top Rated Shows',\n          url: '//api.themoviedb.org/3/tv/top_rated?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1',\n          stream: 'show'\n        }\n      break;\n      case 'topRatedFilms':\n        obj = {\n          title: 'Top Rated Films',\n          url: '//api.themoviedb.org/3/movie/top_rated?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1',\n          stream: 'movie'\n        }\n      break;\n      default:\n      break;\n    }\n    this.props.Listing(obj)\n  }\n\n  /* ----------------- Search -------------------*/\n  search = event => {\n    event.preventDefault();\n    this.props.SearchFilm(this.state.search)\n    this.props.SearchShow(this.state.search)\n    this.setState({tosearch: true})\n  }\n\n  \n  render() {\n    if (this.state.tosearch === true) {\n      return <Redirect to='/search' />\n    }\n    return (\n      <div>\n        <NavBar\n          list={this.list}\n          search={this.search}\n        >\n          <Input \n            value={this.state.search}\n            onChange={this.handleInputChange}\n            name=\"search\"\n          />\n        </NavBar>\n        {this.props.medium.length ? (\n          <Listings\n            title={this.state.title}\n          >\n            {this.props.medium.map((media) => (\n              <NavLink  to=\"/display\"> \n                <Media \n                poster={media.poster}\n                title={media.title}\n                fullDisplay={this.displayFav}\n                />\n              </NavLink>\n            ))}\n          </Listings>\n        ) : (<div/>)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  medium: state.Listings.list\n});\n\nexport default connect(mapStateToProps, { OnDisplay, SearchFilm, SearchShow, Listing } )(Favorites);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { Listings, Media } from '../components/Listings'\nimport { NavBar, Input } from '../components/Nav'\nimport OnDisplay from '../actions/On-Display';\nimport SearchFilm from '../actions/Search/movie'\nimport SearchShow from '../actions/Search/show'\nimport Listing from '../actions/Listings'\n\nclass Favorites extends Component {\n  state = {\n    films: 'Films',\n    shows: 'Shows',\n    search: \"\"\n  };\n\n  /* ------------------ Handle Input Change ------------- */\n  handleInputChange = event => {\n\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  \n  /* ---------------------- Display -----------------------*/\n  displayMovie = event => {\n    const chosen = this.props.movies.find(({ title }) => title === event); \n    \n    this.props.OnDisplay(chosen)\n  }\n\n  displayShow = event => {\n    const chosen = this.props.shows.find(({ title }) => title === event); \n    \n    this.props.OnDisplay(chosen)\n  }\n\n\n  /* ------------ Top Rated & Most Popular ------------ */\n  list = data => {\n    let obj = -1\n    switch(data) {\n      case 'popShows':\n        obj = {\n          title: 'Popular Shows',\n          url: '//api.themoviedb.org/3/tv/popular?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1',\n          stream: 'show'\n        }\n      break;\n      case 'popFilm':\n        obj = {\n          title: 'Popular Film',\n          url: '//api.themoviedb.org/3/movie/popular?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=2',\n          stream: 'movie'\n        }\n      break;\n      case 'topRatedShows': \n        obj = {\n          title: 'Top Rated Shows',\n          url: '//api.themoviedb.org/3/tv/top_rated?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1',\n          stream: 'show'\n        }\n      break;\n      case 'topRatedFilms':\n        obj = {\n          title: 'Top Rated Films',\n          url: '//api.themoviedb.org/3/movie/top_rated?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1',\n          stream: 'movie'\n        }\n      break;\n      default:\n      break;\n    }\n    this.props.Listing(obj)\n  }\n\n\n  /* ----------------- Search -------------------*/\n  search = event => {\n    event.preventDefault();\n    this.props.SearchFilm(this.state.search)\n    this.props.SearchShow(this.state.search)\n  }\n  \n \n  render() {\n    return (\n      <div>\n        <NavBar\n          list={this.list}\n          search={this.search}\n        >\n        <Input \n          value={this.state.search}\n          onChange={this.handleInputChange}\n          name=\"search\"\n        />\n        </NavBar>\n        {this.props.movies.length ? (\n          <Listings\n           title=\"Movies\"\n          >\n            {this.props.movies.map((media) => (\n              <NavLink  to=\"/display\"> \n                <Media \n                poster={media.poster}\n                title={media.title}\n                fullDisplay={this.displayMovie}\n                />\n              </NavLink>\n            ))}\n          </Listings>\n        ) : (<div/>)}\n        {this.props.shows.length ? (\n          <Listings\n            title=\"Shows\"\n          >\n            {this.props.shows.map((media) => (\n              media.poster ? (\n              <NavLink  to=\"/display\"> \n                <Media \n                poster={media.poster}\n                title={media.title}\n                fullDisplay={this.displayShow}\n                />\n              </NavLink>\n              ) : (<div></div>)\n            ))}\n          </Listings>\n        ) : (<div/>)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  movies: state.MovieSearch.movies,\n  shows: state.ShowSearch.shows\n});\n\nexport default connect(mapStateToProps, { OnDisplay, SearchFilm, SearchShow, Listing } )(Favorites);","import { cast } from \"../../actions/types\";\n\nconst initialState = {\n    casts: []\n}\n\nconst CastMembersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case cast:\n        return {\n            ...state,\n            casts: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default CastMembersReducer;","import { listing } from \"../../actions/types\";\n\nconst initialState = {\n    list: [],\n}\n\nconst Listings = (state = initialState, action) => {\n    switch (action.type) {\n        case listing:\n        return {\n            ...state,\n            list: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default Listings;","import { selected } from \"../../actions/types\";\n\nconst initialState = {\n    selected: {}\n}\n\nconst OnDisplay = (state = initialState, action) => {\n    switch (action.type) {\n        case selected:\n        return {\n            ...state,\n            selected: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default OnDisplay;","import { related } from \"../../actions/types\";\n\nconst initialState = {\n    related: []\n}\n\nconst RelatedReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case related:\n        return {\n            ...state,\n            related: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default RelatedReducer;","import { movieSearch } from \"../../actions/types\";\n\nconst initialState = {\n    movies: []\n}\n\nconst MovieSearch = (state = initialState, action) => {\n    switch (action.type) {\n        case movieSearch:\n        return {\n            ...state,\n            movies: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default MovieSearch;","import { showSearch } from \"../../actions/types\";\n\nconst initialState = {\n    shows: []\n}\n\nconst ShowSearch = (state = initialState, action) => {\n    switch (action.type) {\n        case showSearch: \n        return {\n            ...state,\n            shows: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default ShowSearch;","import { trailer } from \"../../actions/types\";\n\nconst initialState = {\n    trailer: {}\n}\n\nconst TrailerReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case trailer:\n        return {\n            ...state,\n            trailer: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default TrailerReducer;","import { moviesNowPlaying } from \"../../actions/types\";\n\nconst initialState = {\n    movies: []\n}\n\nconst MoviesPlayingReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case moviesNowPlaying:\n        return {\n            ...state,\n            movies: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default MoviesPlayingReducer;","import { showsNowPlaying } from \"../../actions/types\";\n\nconst initialState = {\n    shows: []\n}\n\nconst ShowsPlayingReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case showsNowPlaying:\n        return {\n            ...state,\n            shows: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default ShowsPlayingReducer;","import { combineReducers } from 'redux';\nimport CastMembersReducer from './Cast-Members';\nimport Listings from './Listings';\nimport OnDisplay from './On-Display';\nimport RelatedReducer from './Related';\nimport MovieSearch  from './Search/movie';\nimport ShowSearch from './Search/show';\nimport TrailerReducer from './Trailer';\nimport MoviesPlayingReducer from './Now-Playing/movies';\nimport ShowsPlayingReducer from './Now-Playing/shows';\n\nexport default combineReducers({\n    OnDisplay,\n    TrailerReducer,\n    CastMembersReducer,\n    RelatedReducer,\n    Listings,\n    ShowSearch,\n    MovieSearch,\n    MoviesPlayingReducer,\n    ShowsPlayingReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n  applyMiddleware(...middleware),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && \n  window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;","import React, { Component } from 'react';\nimport Home from './pages/Home'\nimport Display from './pages/Display';\nimport Favorites from './pages/Favorites'\nimport Search from './pages/Search';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport store from \"./store\";\nimport './styles/style.css'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/display\" component={Display} />\n            <Route path=\"/favorites\" component={Favorites} />\n            <Route path=\"/search\" component={Search} />\n            <Route default component={Home} />\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}