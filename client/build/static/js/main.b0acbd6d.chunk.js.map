{"version":3,"sources":["components/Selected-Film/images/blankhead.png","components/Listings/images/noPoster.jpg","components/Now-Playing/index.js","components/Nav/index.js","actions/types.js","actions/On-Display/index.js","actions/Search/movie.js","actions/Search/show.js","actions/Now-Playing/movies.js","actions/Now-Playing/shows.js","actions/Listings/Shows/ratedShows.js","actions/Listings/Shows/popShows.js","actions/Listings/Movies/ratedMovies.js","actions/Listings/Movies/popMovies.js","pages/Home.js","components/Display/index.js","components/Simple-Slider/index.js","components/Selected-Film/index.js","actions/Cast-Members/index.js","actions/Related/index.js","actions/Trailer/index.js","pages/Display.js","components/Listings/index.js","pages/Favorites.js","pages/Search.js","reducers/Cast-Members/index.js","reducers/Listings/index.js","reducers/On-Display/index.js","reducers/Related/index.js","reducers/Search/movie.js","reducers/Search/show.js","reducers/Trailer/index.js","reducers/Now-Playing/movies.js","reducers/Now-Playing/shows.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NowPlaying","props","react_default","a","createElement","className","children","NowPlayingParallax","style","backgroundImage","concat","poster","id","title","overview","onClick","chosen","NavLink","to","NavBar","list","autoComplete","onSubmit","event","search","Input","Object","assign","type","placeholder","OnDisplay","dispatch","payload","SearchFilm","data","axios","get","then","res","retrival","results","slice","forEach","film","obj","backdrop","backdrop_path","poster_path","vote","vote_average","push","SearchShow","show","original_name","MoviesPlaying","films","FilmsNowPlaying","ShowsPlaying","shows","ShowsOnAir","TopRatedShowListings","lists","media","PageTitle","PopShowListings","TopRatedFilmListings","original_title","PopMovieListings","Home","state","reviews","tosearch","handleInputChange","_event$target","target","name","value","_this","setState","defineProperty","preventDefault","movieChosen","choosenFilm","movies","find","_ref","showChosen","choosenShow","_ref2","shorten","substr","this","_this2","Redirect","onChange","length","map","Component","connect","ShowsPlayingReducer","MoviesPlayingReducer","RelatedFilms","display","src","alt","RelatedContainer","FilmSlider","lib_default","arrows","infinite","speed","slidesToShow","slidesToScroll","React","Selected","rating","genre","director","Casts","photo","blankHead","character","MovieTrailer","video","frameBorder","allow","allowFullScreen","CastMembersAction","url","stream","cast","castMembers","castMember","profile_path","RelatedAction","group","similar","TrailerAction","uTubeTrailer","key","Movie","youtube","related","selected","trailer","Simple_Slider","casts","relative","TrailerReducer","RelatedReducer","CastMembersReducer","Listings","Media","fullDisplay","noPoster","Favorites","displayFav","medium","page","shift","values","toString","Listings_Listings","displayMovie","displayShow","MovieSearch","ShowSearch","initialState","arguments","undefined","action","objectSpread","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","BrowserRouter","Switch","Route","exact","path","component","Display","Search","default","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oXCIjC,SAASC,EAAWC,GACzB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBJ,EAAMK,UAGzC,SAASC,EAAmBN,GACjC,OACEC,EAAAC,EAAAC,cAAA,WAASI,MAAO,CAACC,gBAAe,0CAAAC,OAA4CT,EAAMU,OAAlD,OAC9BT,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,eACNV,EAAAC,EAAAC,cAAA,MAAIC,UAA2B,qDAAhBJ,EAAMY,MAAuB,WAAa,MAAOZ,EAAMY,OACtEX,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYJ,EAAMa,UAC/BZ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAUU,QAAS,kBAAMd,EAAMe,OAAOf,EAAMY,SACvDX,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,GAAG,YAAWhB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BCXxC,SAASc,EAAOlB,GACrB,OACEC,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,UACNV,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAASC,GAAG,KAAIhB,EAAAC,EAAAC,cAAA,QAAMQ,GAAG,QAAT,UACpBV,EAAAC,EAAAC,cAAA,gBACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAS,kBAAMd,EAAMmB,KAAK,cAC5BlB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,GAAG,4BAAb,UAEFhB,EAAAC,EAAAC,cAAA,MAAIW,QAAS,kBAAMd,EAAMmB,KAAK,aAC5BlB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,GAAG,2BAAb,WAINhB,EAAAC,EAAAC,cAAA,mBACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAS,kBAAMd,EAAMmB,KAAK,mBAC5BlB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,GAAG,iCAAb,UAEFhB,EAAAC,EAAAC,cAAA,MAAIW,QAAS,kBAAMd,EAAMmB,KAAK,mBAC5BlB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,GAAG,iCAAb,YAKRhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,QAAMiB,aAAa,MAAMC,SAAU,SAACC,GAAD,OAAWtB,EAAMuB,OAAOD,KAC1DtB,EAAMK,YAOR,SAASmB,EAAMxB,GACpB,OAAOC,EAAAC,EAAAC,cAAA,QAAAsB,OAAAC,OAAA,CAAOf,GAAG,QAAQgB,KAAK,OAAOC,YAAY,UAAa5B,ICxCzD,ICSQ6B,EAPG,SAAAd,GAAM,OAAI,SAAAe,GACxBA,EAAS,CACPH,KDJkB,WCKlBI,QAAShB,sBCuBAiB,EAzBI,SAAAC,GACf,OAAO,SAASH,GACdI,IAAMC,IAAN,2GAAA1B,OAAqHwB,EAArH,gCACCG,KAAK,SAAAC,GACJ,IAAIC,EAAWD,EAAIJ,KAAKM,QAAQC,MAAM,EAAG,IACrCjB,EAAS,GACbe,EAASG,QAAQ,SAAAC,GACf,IAAIC,EAAM,CACRC,SAAUF,EAAKG,cACfnC,OAAQgC,EAAKI,YACblC,MAAO8B,EAAK9B,MACZC,SAAU6B,EAAK7B,SACfkC,KAAML,EAAKM,aACXrC,GAAI+B,EAAK/B,IAEXY,EAAO0B,KAAKN,KAEdb,EAAS,CACPH,KFhBiB,cEiBjBI,QAASR,QCMJ2B,EAzBI,SAAAjB,GACf,OAAO,SAASH,GACdI,IAAMC,IAAN,wGAAA1B,OAAkHwB,EAAlH,gCACCG,KAAK,SAAAC,GACJ,IAAIC,EAAWD,EAAIJ,KAAKM,QAAQC,MAAM,EAAG,IACrCjB,EAAS,GACbe,EAASG,QAAQ,SAAAU,GACf,IAAIR,EAAM,CACRC,SAAUO,EAAKN,cACfnC,OAAQyC,EAAKL,YACblC,MAAOuC,EAAKC,cACZvC,SAAUsC,EAAKtC,SACfkC,KAAMI,EAAKH,aACXrC,GAAIwC,EAAKxC,IAEXY,EAAO0B,KAAKN,KAEdb,EAAS,CACPH,KHfgB,aGgBhBI,QAASR,QCOJ8B,EA1BO,WAClB,OAAO,SAASvB,GACZI,IAAMC,IAAI,wHACTC,KAAK,SAACC,GACH,IAAIiB,EAASjB,EAAIJ,KAAKM,QAAQC,MAAM,EAAG,GACnCe,EAAkB,GACtBD,EAAMb,QAAQ,SAACC,GACf,IAAIC,EAAM,CACNhB,KAAM,OACNiB,SAAUF,EAAKG,cACfnC,OAAQgC,EAAKI,YACblC,MAAO8B,EAAK9B,MACZC,SAAU6B,EAAK7B,SACfkC,KAAML,EAAKM,aACXrC,GAAI+B,EAAK/B,IAET4C,EAAgBN,KAAKN,KAEzBb,EAAS,CACLH,KJdgB,mBIehBI,QAASwB,QCMVC,EA1BM,WACjB,OAAO,SAAS1B,GACZI,IAAMC,IAAI,uGACTC,KAAK,SAAAC,GACF,IAAIoB,EAASpB,EAAIJ,KAAKM,QAAQC,MAAM,EAAG,GACnCkB,EAAa,GACjBD,EAAMhB,QAAQ,SAACU,GACf,IAAIR,EAAM,CACNhB,KAAM,OACNiB,SAAUO,EAAKN,cACfnC,OAAQyC,EAAKL,YACblC,MAAOuC,EAAKC,cACZvC,SAAUsC,EAAKtC,SACfkC,KAAMI,EAAKH,aACXrC,GAAIwC,EAAKxC,IAEb+C,EAAWT,KAAKN,KAEhBb,EAAS,CACLH,KLfe,kBKgBfI,QAAS2B,QCMVC,EA1Bc,WACzB,OAAO,SAAS7B,GACdI,IAAMC,IAAI,sGACTC,KAAK,SAAAC,GACJ,IAAIuB,EAASvB,EAAIJ,KAAKM,QAAQC,MAAM,EAAG,IACnCqB,EAAQ,CAAC,CAACC,UAAW,oBACzBF,EAAMnB,QAAQ,SAAAtB,GACZ,IAAIwB,EAAM,CACRhB,KAAM,OACNf,MAAOO,EAAKiC,cACZ1C,OAAQS,EAAK2B,YACbF,SAAUzB,EAAK0B,cACfhC,SAAUM,EAAKN,SACfkC,KAAM5B,EAAK6B,aACXrC,GAAIQ,EAAKR,IAEXkD,EAAMZ,KAAKN,KAEbb,EAAS,CACPH,KNlBa,WMmBbI,QAAS8B,QCMJE,EA1BS,WACpB,OAAO,SAASjC,GACdI,IAAMC,IAAI,oGACTC,KAAK,SAAAC,GACJ,IAAIuB,EAASvB,EAAIJ,KAAKM,QAAQC,MAAM,EAAG,IACnCqB,EAAQ,CAAC,CAACC,UAAW,kBACzBF,EAAMnB,QAAQ,SAAAtB,GACZ,IAAIwB,EAAM,CACRhB,KAAM,OACNf,MAAOO,EAAKiC,cACZ1C,OAAQS,EAAK2B,YACbF,SAAUzB,EAAK0B,cACfhC,SAAUM,EAAKN,SACfkC,KAAM5B,EAAK6B,aACXrC,GAAIQ,EAAKR,IAEXkD,EAAMZ,KAAKN,KAEbb,EAAS,CACPH,KPlBa,WOmBbI,QAAS8B,QCMJG,EA1Bc,WACzB,OAAO,SAASlC,GACdI,IAAMC,IAAI,yGACTC,KAAK,SAAAC,GACJ,IAAIuB,EAASvB,EAAIJ,KAAKM,QAAQC,MAAM,EAAG,IACnCqB,EAAQ,CAAC,CAACC,UAAW,mBACzBF,EAAMnB,QAAQ,SAAAtB,GACZ,IAAIwB,EAAM,CACRhB,KAAM,QACNf,MAAOO,EAAK8C,eACZvD,OAAQS,EAAK2B,YACbF,SAAUzB,EAAK0B,cACfhC,SAAUM,EAAKN,SACfkC,KAAM5B,EAAK6B,aACXrC,GAAIQ,EAAKR,IAEXkD,EAAMZ,KAAKN,KAEbb,EAAS,CACPH,KRlBa,WQmBbI,QAAS8B,QCMJK,EA1BU,WACrB,OAAO,SAASpC,GACdI,IAAMC,IAAI,uGACTC,KAAK,SAAAC,GACJ,IAAIuB,EAASvB,EAAIJ,KAAKM,QAAQC,MAAM,EAAG,IACnCqB,EAAQ,CAAC,CAACC,UAAW,kBACzBF,EAAMnB,QAAQ,SAAAtB,GACZ,IAAIwB,EAAM,CACRhB,KAAM,QACNf,MAAOO,EAAK8C,eACZvD,OAAQS,EAAK2B,YACbF,SAAUzB,EAAK0B,cACfhC,SAAUM,EAAKN,SACfkC,KAAM5B,EAAK6B,aACXrC,GAAIQ,EAAKR,IAEXkD,EAAMZ,KAAKN,KAEbb,EAAS,CACPH,KTlBa,WSmBbI,QAAS8B,QCPbM,6MACJC,MAAQ,CACNC,SAAU,EACV9C,OAAQ,GACR+C,UAAU,KAYZC,kBAAoB,SAAAjD,GAAS,IAAAkD,EAEHlD,EAAMmD,OAAtBC,EAFmBF,EAEnBE,KAAMC,EAFaH,EAEbG,MACdC,EAAKC,SAALpD,OAAAqD,EAAA,EAAArD,CAAA,GACGiD,EAAOC,OAMZxD,KAAO,SAAAc,GACL,OAAOA,GACL,IAAK,WACH2C,EAAK5E,MAAM+D,kBACb,MACA,IAAK,UACHa,EAAK5E,MAAMkE,mBACb,MACA,IAAK,gBACHU,EAAK5E,MAAM2D,uBACb,MACA,IAAK,gBACHiB,EAAK5E,MAAMgE,2BASjBzC,OAAS,SAAAD,GACPA,EAAMyD,iBACNH,EAAK5E,MAAMgC,WAAW4C,EAAKR,MAAM7C,QACjCqD,EAAK5E,MAAMkD,WAAW0B,EAAKR,MAAM7C,QACjCqD,EAAKC,SAAS,CAACP,UAAU,OAK3BU,YAAc,SAAA1D,GACZ,IAAM2D,EAAcL,EAAK5E,MAAMkF,OAAOC,KAAK,SAAAC,GAAA,OAAAA,EAAGxE,QAAsBU,IACpEsD,EAAK5E,MAAM6B,UAAUoD,MAGvBI,WAAa,SAAA/D,GACX,IAAMgE,EAAcV,EAAK5E,MAAMyD,MAAM0B,KAAK,SAAAI,GAAA,OAAAA,EAAG3E,QAAsBU,IAEnEsD,EAAK5E,MAAM6B,UAAUyD,MAGvBE,QAAU,SAAA3E,GACR,OAAIA,EACF,GAAAJ,OAAUI,EAAS4E,OAAO,EAAG,KAA7B,MAEA,uFA7DFC,KAAK1F,MAAMqD,gBACXqC,KAAK1F,MAAMwD,gDAiEJ,IAAAmC,EAAAD,KACP,OAA4B,IAAxBA,KAAKtB,MAAME,SACNrE,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAU3E,GAAG,YAGpBhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACe,EAAD,CACAC,KAAMuE,KAAKvE,KACXI,OAAQmE,KAAKnE,QAEbtB,EAAAC,EAAAC,cAACqB,EAAD,CACAmD,MAAOe,KAAKtB,MAAM7C,OAClBsE,SAAUH,KAAKnB,kBACfG,KAAK,YAGJgB,KAAK1F,MAAMkF,OAAOY,OACnB7F,EAAAC,EAAAC,cAACJ,EAAD,KACC2F,KAAK1F,MAAMkF,OAAOa,IAAI,SAACrD,GAAD,OACrBzC,EAAAC,EAAAC,cAACG,EAAD,CACEI,OAAQgC,EAAKE,SACbhC,MAAO8B,EAAK9B,MACZG,OAAQ4E,EAAKX,YACbnE,SAAU8E,EAAKH,QAAQ9C,EAAK7B,eAI3BZ,EAAAC,EAAAC,cAAA,YACJuF,KAAK1F,MAAMyD,MAAMqC,OAClB7F,EAAAC,EAAAC,cAACJ,EAAD,KACC2F,KAAK1F,MAAMyD,MAAMsC,IAAI,SAAC5C,GAAD,OACpBlD,EAAAC,EAAAC,cAACG,EAAD,CACEI,OAAQyC,EAAKP,SACbhC,MAAOuC,EAAKvC,MACZG,OAAQ4E,EAAKN,WACbxE,SAAU8E,EAAKH,QAAQrC,EAAKtC,eAI3BZ,EAAAC,EAAAC,cAAA,oBAnHM6F,aA8HJC,cALS,SAAA7B,GAAK,MAAK,CAChCX,MAAOW,EAAM8B,oBAAoBzC,MACjCyB,OAAQd,EAAM+B,qBAAqBjB,SAGG,CAAErD,YAAWG,aACnDkB,aAAYG,gBAAeG,eAC3BG,uBAAsBI,kBACtBC,uBAAsBE,oBAHT+B,CAG6B9B,SC9IrC,SAASiC,EAAapG,GACzB,OACIC,EAAAC,EAAAC,cAAA,OAAKW,QAAS,kBAAMd,EAAMqG,QAAQrG,EAAMY,QAAQR,UAAU,wBACtDH,EAAAC,EAAAC,cAAA,OAAKmG,IAAG,sCAAA7F,OAAwCT,EAAMU,QAAU6F,IAAKvG,EAAMU,UAKhF,SAAS8F,EAAiBxG,GAC7B,OACIC,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,mBAAmBP,UAAU,mBACjCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,4BAECH,EAAMK,gCCIZoG,0LARX,OACExG,EAAAC,EAAAC,cAACuG,EAAAxG,EATc,CACfyG,QAAQ,EACRC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChB3G,UAAW,cAIRsF,KAAK1F,MAAMK,iBAZK2G,IAAMhB,qCCAxB,SAASiB,EAASjH,GACrB,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,mBAAmB2F,IAAG,sCAAA7F,OAAwCT,EAAM4C,UAAY2D,IAAI,WAC5FtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBO,GAAG,QAChCV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACXH,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,iBAAiB2F,IAAG,sCAAA7F,OAAwCT,EAAMU,QAAU6F,IAAKvG,EAAMY,SAEnGX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BO,GAAG,WAC1CV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,UAAKH,EAAMY,OACfX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAA6BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAUJ,EAAMkH,SAC7EjH,EAAAC,EAAAC,cAAA,SAAIH,EAAMmH,OACVlH,EAAAC,EAAAC,cAAA,KAAGQ,GAAG,YAAYX,EAAMoH,WAExBnH,EAAAC,EAAAC,cAAA,KAAGQ,GAAG,YAAYX,EAAMa,WAE5BZ,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,QACHX,EAAMK,cAS5B,SAASgH,EAAMrH,GAClB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKmG,IAAqB,OAAhBtG,EAAMsH,MAAiBC,IAAvB,sCAAA9G,OAAyET,EAAMsH,OAASf,IAAKvG,EAAM0E,OAC7GzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,KAAGQ,GAAG,aAAaX,EAAM0E,MACzBzE,EAAAC,EAAAC,cAAA,KAAGQ,GAAG,aAAN,cAA8BX,EAAMwH,aAkB7C,SAASC,EAAazH,GACzB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,UAAQQ,GAAG,UACP2F,IAAKtG,EAAM0H,MAAO9G,MAAM,QAAQ+G,YAAY,IAC5CC,MAAM,4BAA4BC,iBAAe,OC7DzE,IA4BeC,EA5BW,SAAA7F,GACtB,IAAM8F,EAAsB,SAAhB9F,EAAK+F,OAAL,mCAAAvH,OACuBwB,EAAKtB,GAD5B,oGAAAF,OAEoBwB,EAAKtB,GAFzB,qDAGZ,OAAO,SAASmB,GAChBI,IACGC,IAAI4F,GACJ3F,KAAK,SAACC,GACL,IAAIJ,EAAQI,EAAIJ,KAAKgG,KAAKzF,MAAM,EAAG,GAE/B0F,EAAc,GAElBjG,EAAKQ,QAAQ,SAAA0F,GACX,IAAIxF,EAAM,CACR6E,UAAWW,EAAWX,UACtB9C,KAAMyD,EAAWzD,KACjB4C,MAAOa,EAAWC,cAEpBF,EAAYjF,KAAKN,KAEnBb,EAAS,CACPH,KdrBU,OcsBVI,QAASmG,QCQJG,EA9BO,SAAApG,GAClB,IAAM8F,EAAsB,SAAhB9F,EAAK+F,OAAL,6BAAAvH,OACiBwB,EAAKtB,GADtB,2GAAAF,OAEoBwB,EAAKtB,GAFzB,2EAGZ,OAAO,SAASmB,GAChBI,IACGC,IAAI4F,GACJ3F,KAAK,SAACC,GACL,IAAIiG,EAAQjG,EAAIJ,KAAKM,QAAQC,MAAM,EAAE,GACjC+F,EAAU,GACdD,EAAM7F,QAAQ,SAAAoB,GACZ,IAAIlB,EAAM,CACRhB,KAAsB,SAAhBM,EAAK+F,OAAoB,OAAS,QACxCpF,SAAUiB,EAAMhB,cAChBnC,OAAQmD,EAAMf,YACdlC,MAAuB,SAAhBqB,EAAK+F,OAAoBnE,EAAMT,cAAgBS,EAAMI,eAC5DpD,SAAUgD,EAAMhD,SAChBkC,KAAMc,EAAMb,aACZrC,GAAIkD,EAAMlD,IAEZ4H,EAAQtF,KAAKN,KAEfb,EAAS,CACPH,KfxBa,UeyBbI,QAASwG,QCRJC,EAhBO,SAAAvG,GAClB,IAAM8F,EAAsB,SAAhB9F,EAAK+F,OAAL,6BAAAvH,OACkBwB,EAAKtB,GADvB,yGAAAF,OAE2BwB,EAAKtB,GAFhC,mEAGZ,OAAO,SAASmB,GACdI,IAAMC,IAAI4F,GACT3F,KAAK,SAAAC,GACJ,IAAMoG,EAAepG,EAAIJ,KAAKM,QAAQ,GAAGmG,IACzC5G,EAAS,CACPH,KhBXa,UgBYbI,QAAS0G,QCMbE,6MACJvE,MAAQ,CACNwE,SAAU,EACVrH,OAAQ,GACRZ,GAAI,GACJ2D,UAAU,EACV8C,SAAU,MA4BZ7C,kBAAoB,SAAAjD,GAAS,IAAAkD,EAEHlD,EAAMmD,OAAtBC,EAFmBF,EAEnBE,KAAMC,EAFaH,EAEbG,MACdC,EAAKC,SAALpD,OAAAqD,EAAA,EAAArD,CAAA,GACGiD,EAAOC,OAMZxD,KAAO,SAAAc,GACL,OAAOA,GACL,IAAK,WACH2C,EAAK5E,MAAM+D,kBACb,MACA,IAAK,UACHa,EAAK5E,MAAMkE,mBACb,MACA,IAAK,gBACHU,EAAK5E,MAAM2D,uBACb,MACA,IAAK,gBACHiB,EAAK5E,MAAMgE,2BASjBzC,OAAS,SAAAD,GACPA,EAAMyD,iBACNH,EAAK5E,MAAMgC,WAAW4C,EAAKR,MAAM7C,QACjCqD,EAAK5E,MAAMkD,WAAW0B,EAAKR,MAAM7C,QACjCqD,EAAKC,SAAS,CAACP,UAAU,OAG3B+B,QAAU,SAAA/E,GACR,IAAMP,EAAS6D,EAAK5E,MAAM6I,QAAQ1D,KAAK,SAAAC,GAAA,OAAAA,EAAGxE,QAAsBU,IAEhEsD,EAAK5E,MAAM6B,UAAUd,uFA/DrB2E,KAAKb,SAAS,CAAClE,GAAI+E,KAAK1F,MAAM8I,SAASnI,KACvC+E,KAAK1F,MAAM8H,kBAAkB,CAACnH,GAAI+E,KAAK1F,MAAM8I,SAASnI,GAAIqH,OAAQtC,KAAK1F,MAAM8I,SAASnH,OACtF+D,KAAK1F,MAAMqI,cAAc,CAAC1H,GAAI+E,KAAK1F,MAAM8I,SAASnI,GAAIqH,OAAQtC,KAAK1F,MAAM8I,SAASnH,OAClF+D,KAAK1F,MAAMwI,cAAc,CAAC7H,GAAI+E,KAAK1F,MAAM8I,SAASnI,GAAIqH,OAAQtC,KAAK1F,MAAM8I,SAASnH,yDAG1D3B,GAQxB,GAPI0F,KAAKtB,MAAMzD,KAAOX,EAAM8I,SAASnI,KACnC+E,KAAK1F,MAAMwI,cAAc,CAAC7H,GAAIX,EAAM8I,SAASnI,GAAIqH,OAAQhI,EAAM8I,SAASnH,OACxE+D,KAAK1F,MAAMqI,cAAc,CAAC1H,GAAIX,EAAM8I,SAASnI,GAAIqH,OAAQhI,EAAM8I,SAASnH,OACxE+D,KAAK1F,MAAM8H,kBAAkB,CAACnH,GAAIX,EAAM8I,SAASnI,GAAIqH,OAAQhI,EAAM8I,SAASnH,OAC5E+D,KAAKb,SAAS,CAAClE,GAAIX,EAAM8I,SAASnI,MAGhCX,EAAM+I,QAAS,CACnB,IAAMrB,EAAQ,iCAAmC1H,EAAM+I,QACvDrD,KAAKb,SAAS,CAAE+D,QAASlB,sCAmDlB,IAAA/B,EAAAD,KACP,OAA4B,IAAxBA,KAAKtB,MAAME,SACNrE,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAU3E,GAAG,YAGpBhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACe,EAAD,CACEC,KAAMuE,KAAKvE,KACXI,OAAQmE,KAAKnE,QAEftB,EAAAC,EAAAC,cAACqB,EAAD,CACEmD,MAAOe,KAAKtB,MAAM7C,OAClBsE,SAAUH,KAAKnB,kBACfG,KAAK,YAGLgB,KAAK1F,MAAM8I,SAASlI,MACtBX,EAAAC,EAAAC,cAAC8G,EAAD,CACErE,SAAY8C,KAAK1F,MAAM8I,SAASlG,SAChClC,OAAUgF,KAAK1F,MAAM8I,SAASpI,OAC9BE,MAAS8E,KAAK1F,MAAM8I,SAASlI,MAC7BC,SAAY6E,KAAK1F,MAAM8I,SAASjI,SAChCqG,OAAUxB,KAAK1F,MAAM8I,SAAS/F,MAEhC9C,EAAAC,EAAAC,cAAC6I,EAAD,KACGtD,KAAK1F,MAAMiJ,MAAMlD,IAAI,SAAAoC,GAAU,OAChClI,EAAAC,EAAAC,cAACkH,EAAD,CACEC,MAASa,EAAWb,MACpBE,UAAaW,EAAWX,UACxB9C,KAAQyD,EAAWzD,WAKlBzE,EAAAC,EAAAC,cAAA,aACoB,IAAxBuF,KAAKtB,MAAMwE,SACV3I,EAAAC,EAAAC,cAACsH,EAAD,CACEC,MAAShC,KAAKtB,MAAMwE,UAGvBlD,KAAK1F,MAAM6I,QAAQ/C,OACpB7F,EAAAC,EAAAC,cAACqG,EAAD,KACGd,KAAK1F,MAAM6I,QAAQ9C,IAAI,SAAAmD,GAAQ,OAC9BjJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,GAAG,YACXhB,EAAAC,EAAAC,cAACiG,EAAD,CACE1F,OAAUwI,EAASxI,OACnBE,MAASsI,EAAStI,MAClByF,QAAWV,EAAKU,eAMpBpG,EAAAC,EAAAC,cAAA,oBArIM6F,aAkJLC,cAPS,SAAA7B,GAAK,MAAK,CAChC0E,SAAU1E,EAAMvC,UAAUiH,SAC1BC,QAAS3E,EAAM+E,eAAeJ,QAC9BF,QAASzE,EAAMgF,eAAeP,QAC9BI,MAAO7E,EAAMiF,mBAAmBJ,QAGM,CAACnB,oBAAmBO,gBAC1DG,gBAAe3G,YACfG,aAAYkB,aACZS,uBAAsBI,kBACtBC,uBAAsBE,oBAJT+B,CAI8B0C,4BCrKtC,SAASW,EAAStJ,GACrB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,MAAIQ,GAAG,SAASX,EAAMY,OAClBX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACVJ,EAAMK,WAMhB,SAASkJ,EAAMvJ,GAClB,OACIC,EAAAC,EAAAC,cAAA,OAAKW,QAAS,kBAAMd,EAAMwJ,YAAYxJ,EAAMY,QAAQR,UAAU,QAC1DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAckG,IAAsB,OAAjBtG,EAAMU,OAAkB+I,IAAxB,sCAAAhJ,OAAyET,EAAMU,QAAU6F,IAAKvG,EAAMU,SACtIT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcJ,EAAMY,YCLxC8I,6MACJtF,MAAQ,CACNxD,MAAO,GACPW,OAAQ,GACR+C,UAAU,KAYZC,kBAAoB,SAAAjD,GAAS,IAAAkD,EAEHlD,EAAMmD,OAAtBC,EAFmBF,EAEnBE,KAAMC,EAFaH,EAEbG,MACdC,EAAKC,SAALpD,OAAAqD,EAAA,EAAArD,CAAA,GACGiD,EAAOC,OAMZgF,WAAa,SAAArI,GACX,IAAMP,EAAS6D,EAAK5E,MAAM4J,OAAOzE,KAAK,SAAAC,GAAA,OAAAA,EAAGxE,QAAsBU,IAE/DsD,EAAK5E,MAAM6B,UAAUd,MAIvBI,KAAO,SAAAc,GACL,OAAOA,GACL,IAAK,WACH2C,EAAK5E,MAAM+D,kBACb,MACA,IAAK,UACHa,EAAK5E,MAAMkE,mBACb,MACA,IAAK,gBACHU,EAAK5E,MAAM2D,uBACb,MACA,IAAK,gBACHiB,EAAK5E,MAAMgE,2BAQjBzC,OAAS,SAAAD,GACPA,EAAMyD,iBACNH,EAAK5E,MAAMgC,WAAW4C,EAAKR,MAAM7C,QACjCqD,EAAK5E,MAAMkD,WAAW0B,EAAKR,MAAM7C,QACjCqD,EAAKC,SAAS,CAACP,UAAU,8FAlDDtE,GACxB,IAAM6J,EAAO7J,EAAM4J,OAAOE,QACtB9J,EAAM4J,OAAO9D,QACfJ,KAAKb,SAAS,CAACjE,MAAOa,OAAOsI,OAAOF,GAAMG,8CAmDrC,IAAArE,EAAAD,KACP,OAA4B,IAAxBA,KAAKtB,MAAME,SACNrE,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAU3E,GAAG,YAGpBhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACe,EAAD,CACEC,KAAMuE,KAAKvE,KACXI,OAAQmE,KAAKnE,QAEbtB,EAAAC,EAAAC,cAACqB,EAAD,CACEmD,MAAOe,KAAKtB,MAAM7C,OAClBsE,SAAUH,KAAKnB,kBACfG,KAAK,YAGRgB,KAAK1F,MAAM4J,OAAO9D,OACjB7F,EAAAC,EAAAC,cAAC8J,EAAD,CACErJ,MAAO8E,KAAKtB,MAAMxD,OAEjB8E,KAAK1F,MAAM4J,OAAO7D,IAAI,SAAClC,GAAD,OACrB5D,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,GAAG,YACXhB,EAAAC,EAAAC,cAACoJ,EAAD,CACA7I,OAAQmD,EAAMnD,OACdE,MAAOiD,EAAMjD,MACb4I,YAAa7D,EAAKgE,iBAKrB1J,EAAAC,EAAAC,cAAA,oBA3FW6F,aAqGTC,cAJS,SAAA7B,GAAK,MAAK,CAChCwF,OAAQxF,EAAMkF,SAASnI,OAGe,CAAEU,YAAWG,aACnDkB,aAAYS,uBAAsBI,kBAClCC,uBAAsBE,oBAFT+B,CAE8ByD,GCxGvCA,8MACJtF,MAAQ,CACNd,MAAO,QACPG,MAAO,QACPlC,OAAQ,MAIVgD,kBAAoB,SAAAjD,GAAS,IAAAkD,EAEHlD,EAAMmD,OAAtBC,EAFmBF,EAEnBE,KAAMC,EAFaH,EAEbG,MACdC,EAAKC,SAALpD,OAAAqD,EAAA,EAAArD,CAAA,GACGiD,EAAOC,OAMZuF,aAAe,SAAA5I,GACb,IAAMP,EAAS6D,EAAK5E,MAAMkF,OAAOC,KAAK,SAAAC,GAAA,OAAAA,EAAGxE,QAAsBU,IAE/DsD,EAAK5E,MAAM6B,UAAUd,MAGvBoJ,YAAc,SAAA7I,GACZ,IAAMP,EAAS6D,EAAK5E,MAAMyD,MAAM0B,KAAK,SAAAI,GAAA,OAAAA,EAAG3E,QAAsBU,IAE9DsD,EAAK5E,MAAM6B,UAAUd,MAKvBI,KAAO,SAAAc,GACL,OAAOA,GACL,IAAK,WACH2C,EAAK5E,MAAM+D,kBACb,MACA,IAAK,UACHa,EAAK5E,MAAMkE,mBACb,MACA,IAAK,gBACHU,EAAK5E,MAAM2D,uBACb,MACA,IAAK,gBACHiB,EAAK5E,MAAMgE,2BASjBzC,OAAS,SAAAD,GACPA,EAAMyD,iBACNH,EAAK5E,MAAMgC,WAAW4C,EAAKR,MAAM7C,QACjCqD,EAAK5E,MAAMkD,WAAW0B,EAAKR,MAAM7C,iFAI1B,IAAAoE,EAAAD,KACP,OACEzF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACe,EAAD,CACEC,KAAMuE,KAAKvE,KACXI,OAAQmE,KAAKnE,QAEftB,EAAAC,EAAAC,cAACqB,EAAD,CACEmD,MAAOe,KAAKtB,MAAM7C,OAClBsE,SAAUH,KAAKnB,kBACfG,KAAK,YAGNgB,KAAK1F,MAAMkF,OAAOY,OACjB7F,EAAAC,EAAAC,cAAC8J,EAAD,CACCrJ,MAAM,UAEJ8E,KAAK1F,MAAMkF,OAAOa,IAAI,SAAClC,GAAD,OACrB5D,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,GAAG,YACXhB,EAAAC,EAAAC,cAACoJ,EAAD,CACA7I,OAAQmD,EAAMnD,OACdE,MAAOiD,EAAMjD,MACb4I,YAAa7D,EAAKuE,mBAKrBjK,EAAAC,EAAAC,cAAA,YACJuF,KAAK1F,MAAMyD,MAAMqC,OAChB7F,EAAAC,EAAAC,cAAC8J,EAAD,CACErJ,MAAM,SAEL8E,KAAK1F,MAAMyD,MAAMsC,IAAI,SAAClC,GAAD,OACpBA,EAAMnD,OACNT,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,GAAG,YACXhB,EAAAC,EAAAC,cAACoJ,EAAD,CACA7I,OAAQmD,EAAMnD,OACdE,MAAOiD,EAAMjD,MACb4I,YAAa7D,EAAKwE,eAGflK,EAAAC,EAAAC,cAAA,eAGNF,EAAAC,EAAAC,cAAA,oBAxGW6F,aAmHTC,eALS,SAAA7B,GAAK,MAAK,CAChCc,OAAQd,EAAMgG,YAAYlF,OAC1BzB,MAAOW,EAAMiG,WAAW5G,QAGc,CAAE5B,YAAWG,aACnDkB,aAAYS,uBAAsBI,kBAClCC,uBAAsBE,oBAFT+B,CAE8ByD,yDChIvCY,GAAe,CACjBrB,MAAO,IAeII,GAZY,WAAkC,IAAjCjF,EAAiCmG,UAAAzE,OAAA,QAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAAzBD,GAAcG,EAAWF,UAAAzE,OAAA,EAAAyE,UAAA,QAAAC,EACzD,OAAQC,EAAO9I,MACX,IrBLY,OqBMZ,OAAOF,OAAAiJ,GAAA,EAAAjJ,CAAA,GACA2C,EADP,CAEI6E,MAAOwB,EAAO1I,UAElB,QACA,OAAOqC,ICZTkG,GAAe,CACjBnJ,KAAM,IAeKmI,GAZE,WAAkC,IAAjClF,EAAiCmG,UAAAzE,OAAA,QAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAAzBD,GAAcG,EAAWF,UAAAzE,OAAA,EAAAyE,UAAA,QAAAC,EAC/C,OAAQC,EAAO9I,MACX,ItBJe,WsBKf,OAAOF,OAAAiJ,GAAA,EAAAjJ,CAAA,GACA2C,EADP,CAEIjD,KAAMsJ,EAAO1I,UAEjB,QACA,OAAOqC,ICZTkG,GAAe,CACjBxB,SAAU,IAeCjH,GAZG,WAAkC,IAAjCuC,EAAiCmG,UAAAzE,OAAA,QAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAAzBD,GAAcG,EAAWF,UAAAzE,OAAA,EAAAyE,UAAA,QAAAC,EAChD,OAAQC,EAAO9I,MACX,IvBRgB,WuBShB,OAAOF,OAAAiJ,GAAA,EAAAjJ,CAAA,GACA2C,EADP,CAEI0E,SAAU2B,EAAO1I,UAErB,QACA,OAAOqC,ICZTkG,GAAe,CACjBzB,QAAS,IAeEO,GAZQ,WAAkC,IAAjChF,EAAiCmG,UAAAzE,OAAA,QAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAAzBD,GAAcG,EAAWF,UAAAzE,OAAA,EAAAyE,UAAA,QAAAC,EACrD,OAAQC,EAAO9I,MACX,IxBNe,UwBOf,OAAOF,OAAAiJ,GAAA,EAAAjJ,CAAA,GACA2C,EADP,CAEIyE,QAAS4B,EAAO1I,UAEpB,QACA,OAAOqC,ICZTkG,GAAe,CACjBpF,OAAQ,IAeGkF,GAZK,WAAkC,IAAjChG,EAAiCmG,UAAAzE,OAAA,QAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAAzBD,GAAcG,EAAWF,UAAAzE,OAAA,EAAAyE,UAAA,QAAAC,EAClD,OAAQC,EAAO9I,MACX,IzBHmB,cyBInB,OAAOF,OAAAiJ,GAAA,EAAAjJ,CAAA,GACA2C,EADP,CAEIc,OAAQuF,EAAO1I,UAEnB,QACA,OAAOqC,ICZTkG,GAAe,CACjB7G,MAAO,IAeI4G,GAZI,WAAkC,IAAjCjG,EAAiCmG,UAAAzE,OAAA,QAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAAzBD,GAAcG,EAAWF,UAAAzE,OAAA,EAAAyE,UAAA,QAAAC,EACjD,OAAQC,EAAO9I,MACX,I1BFkB,a0BGlB,OAAOF,OAAAiJ,GAAA,EAAAjJ,CAAA,GACA2C,EADP,CAEIX,MAAOgH,EAAO1I,UAElB,QACA,OAAOqC,ICZTkG,GAAe,CACjBvB,QAAS,IAeEI,GAZQ,WAAkC,IAAjC/E,EAAiCmG,UAAAzE,OAAA,QAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAAzBD,GAAcG,EAAWF,UAAAzE,OAAA,EAAAyE,UAAA,QAAAC,EACrD,OAAQC,EAAO9I,MACX,I3BPe,U2BQf,OAAOF,OAAAiJ,GAAA,EAAAjJ,CAAA,GACA2C,EADP,CAEI2E,QAAS0B,EAAO1I,UAEpB,QACA,OAAOqC,ICZTkG,GAAe,CACjBpF,OAAQ,IAeGiB,GAZc,WAAkC,IAAjC/B,EAAiCmG,UAAAzE,OAAA,QAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAAzBD,GAAcG,EAAWF,UAAAzE,OAAA,EAAAyE,UAAA,QAAAC,EAC3D,OAAQC,EAAO9I,MACX,I5BAwB,mB4BCxB,OAAOF,OAAAiJ,GAAA,EAAAjJ,CAAA,GACA2C,EADP,CAEIc,OAAQuF,EAAO1I,UAEnB,QACA,OAAOqC,ICZTkG,GAAe,CACjB7G,MAAO,IAeIyC,GAZa,WAAkC,IAAjC9B,EAAiCmG,UAAAzE,OAAA,QAAA0E,IAAAD,UAAA,GAAAA,UAAA,GAAzBD,GAAcG,EAAWF,UAAAzE,OAAA,EAAAyE,UAAA,QAAAC,EAC1D,OAAQC,EAAO9I,MACX,I7BDuB,kB6BEvB,OAAOF,OAAAiJ,GAAA,EAAAjJ,CAAA,GACA2C,EADP,CAEIX,MAAOgH,EAAO1I,UAElB,QACA,OAAOqC,ICHAuG,gBAAgB,CAC3B9I,aACAsH,kBACAE,sBACAD,kBACAE,YACAe,cACAD,eACAjE,wBACAD,yBCdE0E,GAAa,CAACC,MAYLC,GAVDC,aACZC,GALmB,GAOnBC,aACAC,KAAeC,WAAf,EAAmBP,IACnBQ,OAAOC,8BACPD,OAAOC,iCCeMC,2LAhBX,OACErL,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAUT,MAAOA,IACf7K,EAAAC,EAAAC,cAACqL,GAAA,EAAD,KACEvL,EAAAC,EAAAC,cAACsL,GAAA,EAAD,KACExL,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1H,IACjClE,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWC,IAClC7L,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CAAOE,KAAK,aAAaC,UAAWnC,IACpCzJ,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWE,KACjC9L,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CAAOM,SAAO,EAACH,UAAW1H,cAXpB6B,cCEEiG,QACW,cAA7Bb,OAAOc,SAASC,UAEe,UAA7Bf,OAAOc,SAASC,UAEhBf,OAAOc,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOrM,EAAAC,EAAAC,cAACoM,GAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxK,KAAK,SAAAyK,GACjCA,EAAaC","file":"static/js/main.b0acbd6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blankhead.b6681619.png\";","module.exports = __webpack_public_path__ + \"static/media/noPoster.3a53c6da.jpg\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport './style.css'\n\nexport function NowPlaying(props) {\n  return <div className=\"home-container\">{props.children}</div>\n}\n\nexport function NowPlayingParallax(props) {\n  return (\n    <section style={{backgroundImage: `url(https://image.tmdb.org/t/p/original${props.poster})`}}>\n      <div id=\"description\">\n        <h2 className={props.title === \"フェアリーテイル\" ? \"tooLarge\" : null}>{props.title}</h2>\n        <p className=\"overview\">{props.overview}</p>\n        <p className=\"trailer\" onClick={() => props.chosen(props.title)}>\n          <NavLink  to=\"/display\"><i className=\"fab fa-youtube\"></i></NavLink>\n        </p>\n      </div>\n    </section>\n  )\n}","import React from \"react\";\nimport './style.css'\nimport { NavLink } from \"react-router-dom\";\n\nexport function NavBar(props) {\n  return (\n    <div id=\"navbar\">\n      <ul>\n        <li><NavLink to=\"/\"><span id=\"home\">Home</span></NavLink></li>\n        <li>Hot\n          <ul>\n            <li onClick={() => props.list('popShows')}> \n              <NavLink  to=\"/favorites/popular-shows\">Shows</NavLink>\n            </li>\n            <li onClick={() => props.list('popFilm')}>\n              <NavLink  to=\"/favorites/popular-film\">Film</NavLink>\n            </li>\n          </ul>\n        </li>\n        <li>Top 20\n          <ul>\n            <li onClick={() => props.list('topRatedShows')}>\n              <NavLink  to=\"/favorites/top-rated-shows-20\">Shows</NavLink>\n            </li>\n            <li onClick={() => props.list('topRatedFilms')}>      \n              <NavLink  to=\"/favorites/top-rated-films-20\">Film</NavLink>\n            </li>\n          </ul>\n        </li>\n      </ul>\n      <div className=\"searchInput\">\n        <form autoComplete=\"off\" onSubmit={(event) => props.search(event)}>\n        {props.children}\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport function Input(props) {\n  return <input id=\"input\" type=\"text\" placeholder=\"Search\" {...props}/>\n}","export const selected = 'selected';\nexport const trailer = 'trailer';\nexport const related = 'related';\nexport const cast = \"cast\";\nexport const listing = \"listings\";\nexport const movieSearch = \"movieSearch\";\nexport const showSearch = \"showSearch\";\nexport const showsNowPlaying = \"showsNowPlaying\";\nexport const moviesNowPlaying = \"moviesNowPlaying\"\nexport const bannerFilms = \"bannerFilms\"","import { selected } from \"../types\";\n\nconst OnDisplay = chosen => dispatch => {\n    dispatch({\n      type: selected,\n      payload: chosen\n    })\n}\n\nexport default OnDisplay;","import { movieSearch } from \"../types\";\nimport axios from \"axios\";\n\nconst SearchFilm = data => {\n    return function(dispatch) {\n      axios.get(`https://api.themoviedb.org/3/search/movie?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&query=${data}&page=1&include_adult=false`)\n      .then(res => {\n        let retrival = res.data.results.slice(0, 10)\n        let search = []\n        retrival.forEach(film => {\n          let obj = {\n            backdrop: film.backdrop_path,\n            poster: film.poster_path,\n            title: film.title,\n            overview: film.overview,\n            vote: film.vote_average,\n            id: film.id\n          }\n          search.push(obj)\n        })\n        dispatch({\n          type: movieSearch,\n          payload: search\n        })\n      })\n    }\n}\n\nexport default SearchFilm;","import { showSearch } from \"../types\";\nimport axios from \"axios\";\n\nconst SearchShow = data => {\n    return function(dispatch) {\n      axios.get(`https://api.themoviedb.org/3/search/tv?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&query=${data}&page=1&include_adult=false`)\n      .then(res => {\n        let retrival = res.data.results.slice(0, 10)\n        let search = []\n        retrival.forEach(show => {\n          let obj = {\n            backdrop: show.backdrop_path,\n            poster: show.poster_path,\n            title: show.original_name,\n            overview: show.overview,\n            vote: show.vote_average,\n            id: show.id\n          }\n          search.push(obj)\n        })\n        dispatch({\n          type: showSearch,\n          payload: search\n        })\n      })\n    }\n}\n\nexport default SearchShow;","import { moviesNowPlaying } from \"../types\";\nimport axios from \"axios\";  \n\nconst MoviesPlaying = () => {\n    return function(dispatch) {\n        axios.get('//api.themoviedb.org/3/movie/now_playing?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1&genre_ids=28')\n        .then((res) => {\n            let films = (res.data.results.slice(0, 3))\n            let FilmsNowPlaying = []\n            films.forEach((film) => {\n            let obj = {\n                type: 'film',\n                backdrop: film.backdrop_path,\n                poster: film.poster_path,\n                title: film.title,\n                overview: film.overview,\n                vote: film.vote_average,\n                id: film.id\n            }\n                FilmsNowPlaying.push(obj)\n            })\n            dispatch({\n                type: moviesNowPlaying,\n                payload: FilmsNowPlaying\n            })\n        })\n    }\n}\n\nexport default MoviesPlaying;","import { showsNowPlaying } from \"../types\";\nimport axios from \"axios\";  \n  \nconst ShowsPlaying = () => {\n    return function(dispatch) {\n        axios.get('//api.themoviedb.org/3/tv/on_the_air?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1')\n        .then(res => {\n            let shows = (res.data.results.slice(3, 5))\n            let ShowsOnAir = []\n            shows.forEach((show) => {\n            let obj = {\n                type: 'show',\n                backdrop: show.backdrop_path,\n                poster: show.poster_path,\n                title: show.original_name,\n                overview: show.overview,\n                vote: show.vote_average,\n                id: show.id\n            }\n            ShowsOnAir.push(obj)\n            })\n            dispatch({\n                type: showsNowPlaying,\n                payload: ShowsOnAir\n            })\n        })\n    }\n} \n\nexport default ShowsPlaying","import { listing } from \"../../types\";\nimport axios from \"axios\";\n\nconst TopRatedShowListings = () => {\n    return function(dispatch) {\n      axios.get(\"//api.themoviedb.org/3/tv/top_rated?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1\")\n      .then(res => {\n        let lists = (res.data.results.slice(0, 12))\n        let media = [{PageTitle: \"Top Rated Shows\"}]\n        lists.forEach(list => {\n          let obj = {\n            type: \"show\",\n            title: list.original_name,\n            poster: list.poster_path,\n            backdrop: list.backdrop_path,\n            overview: list.overview,\n            vote: list.vote_average,\n            id: list.id\n          }\n          media.push(obj)\n        })\n        dispatch({\n          type: listing,\n          payload: media\n        })\n      })\n    }\n}\n\nexport default TopRatedShowListings;","import { listing } from \"../../types\";\nimport axios from \"axios\";\n\nconst PopShowListings = () => {\n    return function(dispatch) {\n      axios.get(\"//api.themoviedb.org/3/tv/popular?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1\")\n      .then(res => {\n        let lists = (res.data.results.slice(0, 12))\n        let media = [{PageTitle: \"Popular Shows\"}]\n        lists.forEach(list => {\n          let obj = {\n            type: \"show\",\n            title: list.original_name,\n            poster: list.poster_path,\n            backdrop: list.backdrop_path,\n            overview: list.overview,\n            vote: list.vote_average,\n            id: list.id\n          }\n          media.push(obj)\n        })\n        dispatch({\n          type: listing,\n          payload: media\n        })\n      })\n    }\n}\n\nexport default PopShowListings;","import { listing } from \"../../types\";\nimport axios from \"axios\";\n\nconst TopRatedFilmListings = () => {\n    return function(dispatch) {\n      axios.get(\"//api.themoviedb.org/3/movie/top_rated?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1\")\n      .then(res => {\n        let lists = (res.data.results.slice(0, 12))\n        let media = [{PageTitle: \"Top Rated Film\"}]\n        lists.forEach(list => {\n          let obj = {\n            type: \"movie\",\n            title: list.original_title,\n            poster: list.poster_path,\n            backdrop: list.backdrop_path,\n            overview: list.overview,\n            vote: list.vote_average,\n            id: list.id\n          }\n          media.push(obj)\n        })\n        dispatch({\n          type: listing,\n          payload: media\n        })\n      })\n    }\n}\n\nexport default TopRatedFilmListings;","import { listing } from \"../../types\";\nimport axios from \"axios\";\n\nconst PopMovieListings = () => {\n    return function(dispatch) {\n      axios.get(\"//api.themoviedb.org/3/movie/popular?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=2\")\n      .then(res => {\n        let lists = (res.data.results.slice(0, 12))\n        let media = [{PageTitle: \"Popular Films\"}]\n        lists.forEach(list => {\n          let obj = {\n            type: \"movie\",\n            title: list.original_title,\n            poster: list.poster_path,\n            backdrop: list.backdrop_path,\n            overview: list.overview,\n            vote: list.vote_average,\n            id: list.id\n          }\n          media.push(obj)\n        })\n        dispatch({\n          type: listing,\n          payload: media\n        })\n      })\n    }\n}\n\nexport default PopMovieListings;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { NowPlayingParallax, NowPlaying } from '../components/Now-Playing';\nimport { NavBar, Input } from '../components/Nav'\nimport OnDisplay from '../actions/On-Display';\nimport SearchFilm from '../actions/Search/movie'\nimport SearchShow from '../actions/Search/show'\nimport MoviesPlaying from '../actions/Now-Playing/movies';\nimport ShowsPlaying from '../actions/Now-Playing/shows';\nimport TopRatedShowListings from '../actions/Listings/Shows/ratedShows';\nimport PopShowListings from '../actions/Listings/Shows/popShows';\nimport TopRatedFilmListings from '../actions/Listings/Movies/ratedMovies';\nimport PopMovieListings from '../actions/Listings/Movies/popMovies';\n\n\nclass Home extends Component {\n  state = {\n    reviews: -1,\n    search: \"\",\n    tosearch: false\n  };\n\n\n  /* ---------------- Component Life-Cycle -------------*/\n  componentDidMount() {\n    this.props.MoviesPlaying()\n    this.props.ShowsPlaying();\n  }\n\n\n  /* ------------------ Handle Input Change ------------- */\n  handleInputChange = event => {\n\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  \n  /* ------------ Top Rated & Most Popular ------------ */\n  list = data => {\n    switch(data) {\n      case 'popShows':\n        this.props.PopShowListings()\n      break;\n      case 'popFilm':\n        this.props.PopMovieListings()\n      break;\n      case 'topRatedShows': \n        this.props.TopRatedShowListings()\n      break;\n      case 'topRatedFilms':\n        this.props.TopRatedFilmListings()\n      break;\n      default:\n      break;\n    }\n  }\n\n\n  /* ----------------- Search -------------------*/\n  search = event => {\n    event.preventDefault();\n    this.props.SearchFilm(this.state.search)\n    this.props.SearchShow(this.state.search)\n    this.setState({tosearch: true})\n  }\n\n \n  /* --------------- Chossen Film --------------------*/\n  movieChosen = event => {\n    const choosenFilm = this.props.movies.find(({ title }) => title === event);\n    this.props.OnDisplay(choosenFilm)\n  }\n\n  showChosen = event => {\n    const choosenShow = this.props.shows.find(({ title }) => title === event);\n\n    this.props.OnDisplay(choosenShow)\n  }\n\n  shorten = overview => {\n    if (overview) {\n      return `${overview.substr(0, 150)}..`;\n    } else {\n      return ``;\n    }\n  };\n \n\n  render() {\n    if (this.state.tosearch === true) {\n      return <Redirect to='/search' />\n    }\n    return (\n      <div>\n        <NavBar\n        list={this.list}\n        search={this.search}\n        >\n        <Input \n        value={this.state.search}\n        onChange={this.handleInputChange}\n        name=\"search\"\n        />\n        </NavBar>\n        {this.props.movies.length ? (\n        <NowPlaying>\n        {this.props.movies.map((film) => (\n          <NowPlayingParallax \n            poster={film.backdrop}\n            title={film.title}\n            chosen={this.movieChosen}\n            overview={this.shorten(film.overview)}\n          />\n        ))}    \n        </NowPlaying>\n        ) : (<div/>)}\n        {this.props.shows.length ? (\n        <NowPlaying>\n        {this.props.shows.map((show) => (\n          <NowPlayingParallax \n            poster={show.backdrop}\n            title={show.title}\n            chosen={this.showChosen}\n            overview={this.shorten(show.overview)}\n          />\n        ))}    \n        </NowPlaying>\n        ) : (<div/>)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  shows: state.ShowsPlayingReducer.shows,\n  movies: state.MoviesPlayingReducer.movies,\n});\n\nexport default connect(mapStateToProps, { OnDisplay, SearchFilm, \n  SearchShow, MoviesPlaying, ShowsPlaying, \n  TopRatedShowListings, PopShowListings,\n  TopRatedFilmListings, PopMovieListings} )(Home);","import React from \"react\";\nimport './style.css';\n\nexport function RelatedFilms(props) {\n    return (\n        <div onClick={() => props.display(props.title)} className=\"relatedFilm col-md-6\">\n            <img src={`https://image.tmdb.org/t/p/original${props.poster}`} alt={props.poster} />\n        </div>\n    )\n}\n\nexport function RelatedContainer(props) {\n    return (\n        <div id=\"relatedContainer\" className=\"container-fluid\">\n            <div className=\"row justify-content-center related\">\n                <div className=\"col-md-12 text-center\">\n                    <h1>Related Films</h1>\n                </div>\n                    {props.children}\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport Slider from \"react-slick\";\nimport './style.css'\n\nclass FilmSlider extends React.Component {\n  render() {\n    const settings = {\n      arrows: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 4,\n      slidesToScroll: 1,\n      className: \"slider row\"\n    };\n    return (\n      <Slider {...settings}>\n        {this.props.children}\n      </Slider>\n    );\n  }\n}\n\nexport default FilmSlider;","import React from \"react\";\nimport './style.css'\nimport blankHead from './images/blankhead.png';\n\nexport function Selected(props) {\n    return (\n        <div>\n            <img id=\"selectedBackDrop\" src={`https://image.tmdb.org/t/p/original${props.backdrop}`} alt=\"Poster\" />\n            <div className=\"container\">\n                <div className=\"row text-center\" id=\"film\">\n                    <div className=\"selectedPosterDiv col-lg-6 col-md-12 order2\">\n                        <img id=\"selectedPoster\" src={`https://image.tmdb.org/t/p/original${props.poster}`} alt={props.title}/>\n                    </div>\n                    <div className=\"col-lg-6 col-md-12 order1\" id=\"details\">\n                        <div className=\"selectedDesciption displayGroup\">\n                            <h1>{props.title}</h1>\n                        <div className=\"row justify-content-around\">\n                            <p><i className=\"fas fa-star starRating\"></i><span className=\"rating\">{props.rating}</span></p>\n                            <p>{props.genre}</p>\n                            <p id=\"director\">{props.director}</p>\n                        </div>\n                            <p id=\"overview\">{props.overview}</p>\n                        </div>\n                        <div id=\"cast\">\n                            {props.children}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport function Casts(props) {\n    return (\n        <div className=\"castMember\">\n            <img src={props.photo === null ? blankHead : `https://image.tmdb.org/t/p/original${props.photo}`} alt={props.name} />\n            <div className=\"name\">\n                <p id=\"performer\">{props.name}</p>\n                <p id=\"character\">Character: {props.character}</p>\n            </div>\n        </div>\n    );\n}\n\nexport function Options(props) {\n    return (\n        <div className=\"options\">\n            <ul className=\"d-flex justify-content-around\">\n                <li onClick={() => props.info('cast')}>Cast</li>\n                <li onClick={() => props.info('trailer')}>Trailer</li>\n                <li onClick={() => props.info('related')}>Related</li>\n            </ul>\n        </div>\n    )\n}\n\nexport function MovieTrailer(props) {\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-sm-12 text-center center\">\n                    <iframe id=\"trailer\" \n                        src={props.video} title=\"video\" frameBorder=\"0\" \n                        allow=\"autoplay; encrypted-media\" allowFullScreen>\n                    </iframe>\n                </div>\n            </div>\n        </div>\n    )\n}","import { cast } from \"../types\";\nimport axios from \"axios\";\n\nconst CastMembersAction = data => {\n    const url = data.stream === 'show' ?\n    `https://api.themoviedb.org/3/tv/${data.id}/credits?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US` :\n    `//api.themoviedb.org/3/movie/${data.id}/credits?api_key=d3bd842cd067b7bd659924a258f4ce8d`\n    return function(dispatch) {\n    axios\n      .get(url)\n      .then((res) => {\n        let data = (res.data.cast.slice(0, 6))\n        // const director = res.data.crew.find( director => director.job === \"Director\" );\n        let castMembers = []\n        // castMembers.push({director: director.name})\n        data.forEach(castMember => {\n          let obj = {\n            character: castMember.character,\n            name: castMember.name,\n            photo: castMember.profile_path\n          }\n          castMembers.push(obj)\n      })\n        dispatch({\n          type: cast,\n          payload: castMembers\n        })\n      })\n    }\n}\n\nexport default CastMembersAction;","import { related } from \"../types\";\nimport axios from \"axios\";\n\nconst RelatedAction = data => {\n    const url = data.stream === \"show\" ? \n    `//api.themoviedb.org/3/tv/${data.id}/similar?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1` :\n    `//api.themoviedb.org/3/movie/${data.id}/similar?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US&page=1`\n    return function(dispatch) {\n    axios\n      .get(url)\n      .then((res) => {\n        let group = res.data.results.slice(0,4)\n        let similar = []\n        group.forEach(media => {\n          let obj = {\n            type: data.stream === \"show\" ? \"show\" : \"movie\",\n            backdrop: media.backdrop_path,\n            poster: media.poster_path,\n            title: data.stream === \"show\" ? media.original_name : media.original_title,\n            overview: media.overview,\n            vote: media.vote_average,\n            id: media.id\n          }\n          similar.push(obj)\n      })\n        dispatch({\n          type: related,\n          payload: similar\n        })\n      })\n    }\n}\n\nexport default RelatedAction;","import { trailer } from \"../types\";\nimport axios from \"axios\";\n\nconst TrailerAction = data => {\n    const url = data.stream === 'show' ?\n     `//api.themoviedb.org/3/tv/${data.id}/videos?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US` :\n     `https://api.themoviedb.org/3/movie/${data.id}/videos?api_key=d3bd842cd067b7bd659924a258f4ce8d&language=en-US`\n    return function(dispatch) {\n      axios.get(url)\n      .then(res => {\n        const uTubeTrailer = res.data.results[0].key\n        dispatch({\n          type: trailer,\n          payload: uTubeTrailer\n        })\n      })\n    }\n}\n\nexport default TrailerAction;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport {RelatedFilms, RelatedContainer} from '../components/Display';\nimport FilmSlider from '../components/Simple-Slider';\nimport { NavBar, Input } from '../components/Nav'\nimport { Selected, MovieTrailer, Casts} from '../components/Selected-Film'\nimport CastMembersAction from '../actions/Cast-Members';\nimport RelatedAction from '../actions/Related';\nimport TrailerAction from '../actions/Trailer';\nimport OnDisplay from '../actions/On-Display';\nimport SearchFilm from '../actions/Search/movie'\nimport SearchShow from '../actions/Search/show'\nimport TopRatedShowListings from '../actions/Listings/Shows/ratedShows';\nimport PopShowListings from '../actions/Listings/Shows/popShows';\nimport TopRatedFilmListings from '../actions/Listings/Movies/ratedMovies';\nimport PopMovieListings from '../actions/Listings/Movies/popMovies';\n\nclass Movie extends Component {\n  state = {\n    youtube: -1,\n    search: \"\",\n    id: '',\n    tosearch: false,\n    director: \"\"\n  };\n  \n\n  /* ---------------- Component Life-Cycle -------------*/\n  componentDidMount() {\n    this.setState({id: this.props.selected.id})\n    this.props.CastMembersAction({id: this.props.selected.id, stream: this.props.selected.type})\n    this.props.RelatedAction({id: this.props.selected.id, stream: this.props.selected.type})\n    this.props.TrailerAction({id: this.props.selected.id, stream: this.props.selected.type})\n  }\n\n  componentWillReceiveProps(props) {\n    if (this.state.id !== props.selected.id) {\n      this.props.TrailerAction({id: props.selected.id, stream: props.selected.type})\n      this.props.RelatedAction({id: props.selected.id, stream: props.selected.type})\n      this.props.CastMembersAction({id: props.selected.id, stream: props.selected.type})\n      this.setState({id: props.selected.id})\n    }\n\n    if (props.trailer) {\n    const video = \"https://www.youtube.com/embed/\" + props.trailer\n    this.setState({ youtube: video})\n    }\n  }\n\n\n  /* ------------------ Handle Input Change ------------- */\n  handleInputChange = event => {\n\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n\n  /* ------------ Top Rated & Most Popular ------------ */\n  list = data => {\n    switch(data) {\n      case 'popShows':\n        this.props.PopShowListings()\n      break;\n      case 'popFilm':\n        this.props.PopMovieListings()\n      break;\n      case 'topRatedShows': \n        this.props.TopRatedShowListings()\n      break;\n      case 'topRatedFilms':\n        this.props.TopRatedFilmListings()\n      break;\n      default:\n      break;\n    }\n  }\n\n\n  /* ----------------- Search -------------------*/\n  search = event => {\n    event.preventDefault();\n    this.props.SearchFilm(this.state.search)\n    this.props.SearchShow(this.state.search)\n    this.setState({tosearch: true})\n  }\n\n  display = event => {\n    const chosen = this.props.related.find(({ title }) => title === event); \n    \n    this.props.OnDisplay(chosen)\n  }\n\n\n  render() {\n    if (this.state.tosearch === true) {\n      return <Redirect to='/search' />\n    }\n    return (\n      <div>\n        <NavBar\n          list={this.list}\n          search={this.search}\n        >\n        <Input \n          value={this.state.search}\n          onChange={this.handleInputChange}\n          name=\"search\"\n        />\n        </NavBar>\n         {this.props.selected.title ? (\n        <Selected \n          backdrop = {this.props.selected.backdrop}\n          poster = {this.props.selected.poster}\n          title = {this.props.selected.title}\n          overview = {this.props.selected.overview}\n          rating = {this.props.selected.vote}\n         >\n        <FilmSlider>\n          {this.props.casts.map(castMember => (\n          <Casts \n            photo = {castMember.photo}\n            character = {castMember.character}\n            name = {castMember.name}\n          />\n          ))}\n        </FilmSlider>\n        </Selected>\n        ) : (<div/>)}\n        {this.state.youtube === -1 ? false :\n          <MovieTrailer \n            video = {this.state.youtube}\n          />\n        }\n        {this.props.related.length ? (\n        <RelatedContainer>\n          {this.props.related.map(relative => (\n            <div>\n              <NavLink  to=\"/display\"> \n                <RelatedFilms \n                  poster = {relative.poster}\n                  title = {relative.title}\n                  display = {this.display}\n                />\n              </NavLink>\n            </div>\n          ))}\n        </RelatedContainer>\n         ) : (<div/>) }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  selected: state.OnDisplay.selected,\n  trailer: state.TrailerReducer.trailer,\n  related: state.RelatedReducer.related,\n  casts: state.CastMembersReducer.casts,\n});\n\nexport default connect(mapStateToProps, {CastMembersAction, RelatedAction, \n  TrailerAction, OnDisplay, \n  SearchFilm, SearchShow, \n  TopRatedShowListings, PopShowListings,\n  TopRatedFilmListings, PopMovieListings } )(Movie);","import React from \"react\";\nimport './style.css'\nimport noPoster from './images/noPoster.jpg'\n\nexport function Listings(props) {\n    return (\n        <div className=\"container\">\n        <h1 id=\"group\">{props.title}</h1>\n            <div className=\"row justify-content-center\">\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport function Media(props) {\n    return (\n        <div onClick={() => props.fullDisplay(props.title)} className=\"favs\">\n            <img className=\"mediaPoster\" src={props.poster === null ? noPoster : `https://image.tmdb.org/t/p/original${props.poster}`} alt={props.poster} />\n            <h2 className=\"mediaTitle\">{props.title}</h2>\n        </div>\n    )\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { NavBar, Input } from '../components/Nav'\nimport { Listings, Media } from '../components/Listings'\nimport OnDisplay from '../actions/On-Display';\nimport SearchFilm from '../actions/Search/movie';\nimport SearchShow from '../actions/Search/show';\nimport TopRatedShowListings from '../actions/Listings/Shows/ratedShows';\nimport PopShowListings from '../actions/Listings/Shows/popShows';\nimport TopRatedFilmListings from '../actions/Listings/Movies/ratedMovies';\nimport PopMovieListings from '../actions/Listings/Movies/popMovies';\n\nclass Favorites extends Component {\n  state = {\n    title: '',\n    search: \"\",\n    tosearch: false\n  };\n\n  componentWillReceiveProps(props) {\n    const page = props.medium.shift();\n    if (props.medium.length) {\n      this.setState({title: Object.values(page).toString()})\n    }\n  }\n\n\n  /* ------------------ Handle Input Change ------------- */\n  handleInputChange = event => {\n\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n\n  /*-----------------------  Display  ----------------------*/\n  displayFav = event => {\n    const chosen = this.props.medium.find(({ title }) => title === event); \n    \n    this.props.OnDisplay(chosen)\n  }\n\n  /* ------------ Top Rated & Most Popular ------------ */\n  list = data => {\n    switch(data) {\n      case 'popShows':\n        this.props.PopShowListings()\n      break;\n      case 'popFilm':\n        this.props.PopMovieListings()\n      break;\n      case 'topRatedShows': \n        this.props.TopRatedShowListings()\n      break;\n      case 'topRatedFilms':\n        this.props.TopRatedFilmListings()\n      break;\n      default:\n      break;\n    }\n  }\n\n  /* ----------------- Search -------------------*/\n  search = event => {\n    event.preventDefault();\n    this.props.SearchFilm(this.state.search)\n    this.props.SearchShow(this.state.search)\n    this.setState({tosearch: true})\n  }\n\n  \n  render() {\n    if (this.state.tosearch === true) {\n      return <Redirect to='/search' />\n    }\n    return (\n      <div>\n        <NavBar\n          list={this.list}\n          search={this.search}\n        >\n          <Input \n            value={this.state.search}\n            onChange={this.handleInputChange}\n            name=\"search\"\n          />\n        </NavBar>\n        {this.props.medium.length ? (\n          <Listings\n            title={this.state.title}\n          >\n            {this.props.medium.map((media) => (\n              <NavLink  to=\"/display\"> \n                <Media \n                poster={media.poster}\n                title={media.title}\n                fullDisplay={this.displayFav}\n                />\n              </NavLink>\n            ))}\n          </Listings>\n        ) : (<div/>)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  medium: state.Listings.list\n});\n\nexport default connect(mapStateToProps, { OnDisplay, SearchFilm, \n  SearchShow, TopRatedShowListings, PopShowListings,\n  TopRatedFilmListings, PopMovieListings } )(Favorites);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { Listings, Media } from '../components/Listings'\nimport { NavBar, Input } from '../components/Nav'\nimport OnDisplay from '../actions/On-Display';\nimport SearchFilm from '../actions/Search/movie';\nimport SearchShow from '../actions/Search/show';\nimport TopRatedShowListings from '../actions/Listings/Shows/ratedShows';\nimport PopShowListings from '../actions/Listings/Shows/popShows';\nimport TopRatedFilmListings from '../actions/Listings/Movies/ratedMovies';\nimport PopMovieListings from '../actions/Listings/Movies/popMovies';\n\nclass Favorites extends Component {\n  state = {\n    films: 'Films',\n    shows: 'Shows',\n    search: \"\"\n  };\n\n  /* ------------------ Handle Input Change ------------- */\n  handleInputChange = event => {\n\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  \n  /* ---------------------- Display -----------------------*/\n  displayMovie = event => {\n    const chosen = this.props.movies.find(({ title }) => title === event); \n    \n    this.props.OnDisplay(chosen)\n  }\n\n  displayShow = event => {\n    const chosen = this.props.shows.find(({ title }) => title === event); \n    \n    this.props.OnDisplay(chosen)\n  }\n\n\n  /* ------------ Top Rated & Most Popular ------------ */\n  list = data => {\n    switch(data) {\n      case 'popShows':\n        this.props.PopShowListings()\n      break;\n      case 'popFilm':\n        this.props.PopMovieListings()\n      break;\n      case 'topRatedShows': \n        this.props.TopRatedShowListings()\n      break;\n      case 'topRatedFilms':\n        this.props.TopRatedFilmListings()\n      break;\n      default:\n      break;\n    }\n  }\n\n\n  /* ----------------- Search -------------------*/\n  search = event => {\n    event.preventDefault();\n    this.props.SearchFilm(this.state.search)\n    this.props.SearchShow(this.state.search)\n  }\n  \n \n  render() {\n    return (\n      <div>\n        <NavBar\n          list={this.list}\n          search={this.search}\n        >\n        <Input \n          value={this.state.search}\n          onChange={this.handleInputChange}\n          name=\"search\"\n        />\n        </NavBar>\n        {this.props.movies.length ? (\n          <Listings\n           title=\"Movies\"\n          >\n            {this.props.movies.map((media) => (\n              <NavLink  to=\"/display\"> \n                <Media \n                poster={media.poster}\n                title={media.title}\n                fullDisplay={this.displayMovie}\n                />\n              </NavLink>\n            ))}\n          </Listings>\n        ) : (<div/>)}\n        {this.props.shows.length ? (\n          <Listings\n            title=\"Shows\"\n          >\n            {this.props.shows.map((media) => (\n              media.poster ? (\n              <NavLink  to=\"/display\"> \n                <Media \n                poster={media.poster}\n                title={media.title}\n                fullDisplay={this.displayShow}\n                />\n              </NavLink>\n              ) : (<div></div>)\n            ))}\n          </Listings>\n        ) : (<div/>)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  movies: state.MovieSearch.movies,\n  shows: state.ShowSearch.shows\n});\n\nexport default connect(mapStateToProps, { OnDisplay, SearchFilm, \n  SearchShow, TopRatedShowListings, PopShowListings,\n  TopRatedFilmListings, PopMovieListings } )(Favorites);","import { cast } from \"../../actions/types\";\n\nconst initialState = {\n    casts: []\n}\n\nconst CastMembersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case cast:\n        return {\n            ...state,\n            casts: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default CastMembersReducer;","import { listing } from \"../../actions/types\";\n\nconst initialState = {\n    list: [],\n}\n\nconst Listings = (state = initialState, action) => {\n    switch (action.type) {\n        case listing:\n        return {\n            ...state,\n            list: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default Listings;","import { selected } from \"../../actions/types\";\n\nconst initialState = {\n    selected: {}\n}\n\nconst OnDisplay = (state = initialState, action) => {\n    switch (action.type) {\n        case selected:\n        return {\n            ...state,\n            selected: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default OnDisplay;","import { related } from \"../../actions/types\";\n\nconst initialState = {\n    related: []\n}\n\nconst RelatedReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case related:\n        return {\n            ...state,\n            related: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default RelatedReducer;","import { movieSearch } from \"../../actions/types\";\n\nconst initialState = {\n    movies: []\n}\n\nconst MovieSearch = (state = initialState, action) => {\n    switch (action.type) {\n        case movieSearch:\n        return {\n            ...state,\n            movies: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default MovieSearch;","import { showSearch } from \"../../actions/types\";\n\nconst initialState = {\n    shows: []\n}\n\nconst ShowSearch = (state = initialState, action) => {\n    switch (action.type) {\n        case showSearch: \n        return {\n            ...state,\n            shows: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default ShowSearch;","import { trailer } from \"../../actions/types\";\n\nconst initialState = {\n    trailer: {}\n}\n\nconst TrailerReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case trailer:\n        return {\n            ...state,\n            trailer: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default TrailerReducer;","import { moviesNowPlaying } from \"../../actions/types\";\n\nconst initialState = {\n    movies: []\n}\n\nconst MoviesPlayingReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case moviesNowPlaying:\n        return {\n            ...state,\n            movies: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default MoviesPlayingReducer;","import { showsNowPlaying } from \"../../actions/types\";\n\nconst initialState = {\n    shows: []\n}\n\nconst ShowsPlayingReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case showsNowPlaying:\n        return {\n            ...state,\n            shows: action.payload\n        }\n        default: \n        return state;\n    }\n}\n\nexport default ShowsPlayingReducer;","import { combineReducers } from 'redux';\nimport CastMembersReducer from './Cast-Members';\nimport Listings from './Listings';\nimport OnDisplay from './On-Display';\nimport RelatedReducer from './Related';\nimport MovieSearch  from './Search/movie';\nimport ShowSearch from './Search/show';\nimport TrailerReducer from './Trailer';\nimport MoviesPlayingReducer from './Now-Playing/movies';\nimport ShowsPlayingReducer from './Now-Playing/shows';\n\nexport default combineReducers({\n    OnDisplay,\n    TrailerReducer,\n    CastMembersReducer,\n    RelatedReducer,\n    Listings,\n    ShowSearch,\n    MovieSearch,\n    MoviesPlayingReducer,\n    ShowsPlayingReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n  applyMiddleware(...middleware),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && \n  window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;","import React, { Component } from 'react';\nimport Home from './pages/Home'\nimport Display from './pages/Display';\nimport Favorites from './pages/Favorites'\nimport Search from './pages/Search';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport store from \"./store\";\nimport './styles/style.css'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/display\" component={Display} />\n            <Route path=\"/favorites\" component={Favorites} />\n            <Route path=\"/search\" component={Search} />\n            <Route default component={Home} />\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}